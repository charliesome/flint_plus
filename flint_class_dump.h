//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGFunctionCallbacks {
    unsigned int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    char _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

#pragma mark -

//
// File: /Applications/Flint.app/Contents/MacOS/Flint
// UUID: 3EB146A5-F3A7-3F70-AA36-348F4B637A40
//
//                           Arch: x86_64
//       Minimum Mac OS X version: 10.7.0
//                    SDK version: 10.8.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../Frameworks
//                               = /Applications/Flint.app/Contents/Frameworks
//

@protocol AFMultipartFormData
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(NSDictionary *)arg1 body:(NSData *)arg2;
- (void)appendPartWithFormData:(NSData *)arg1 name:(NSString *)arg2;
- (void)appendPartWithFileData:(NSData *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4;
- (void)appendPartWithInputStream:(NSInputStream *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 length:(unsigned long long)arg4 mimeType:(NSString *)arg5;
- (BOOL)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4 error:(id *)arg5;
- (BOOL)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 error:(id *)arg3;
@end

@protocol BITCrashReportManagerDelegate <NSObject>
- (void)showMainApplicationWindow;

@optional
- (NSString *)crashReportApplicationLog;
@end

@protocol FlintAutocompleteControllerDelegate <NSObject>
- (void)insertAutocompleteItem:(FlintAutocompleteItem *)arg1;
- (void)continueAutocompleteWithString:(NSString *)arg1;
@end

@protocol FlintCampfireRoomConnectionDelegate <NSObject>
- (void)connectionErrorOccurred:(NSString *)arg1;
- (void)connectionDidConnect;
- (void)connectionDidReceiveMessages:(NSArray *)arg1 streamed:(BOOL)arg2;
@end

@protocol FlintEmbedViewDelegate <NSObject>

@optional
- (FlintCampfireMessage *)messageForEmbedView:(FlintEmbedView *)arg1;
- (void)didClickEmbedView:(FlintEmbedView *)arg1;
@end

@protocol FlintFindControllerDelegate <NSObject>
- (void)findDidComplete;
- (void)nextFindMatch;
- (void)previousFindMatch;
- (void)findText:(NSString *)arg1;
@end

@protocol FlintInputDelegate <NSObject>
- (void)postMessage:(NSString *)arg1 paste:(BOOL)arg2;
@end

@protocol FlintPasteboardHandlerDelegate <NSObject>

@optional
- (void)uploadFiles:(NSArray *)arg1;
@end

@protocol FlintTableViewDelegate <NSObject>
- (void)tableView:(NSTableView *)arg1 didClickRow:(long long)arg2 inView:(NSView *)arg3 event:(NSEvent *)arg4;

@optional
- (NSMenu *)tableView:(NSTableView *)arg1 menuForRow:(long long)arg2;
@end

@protocol FlintTextViewDelegate <NSObject>
- (void)postMessage;
- (NSArray *)autocompleteItemsForString:(NSString *)arg1;
@end

@protocol GrowlApplicationBridgeDelegate <NSObject>

@optional
- (BOOL)hasNetworkClientEntitlement;
- (void)growlNotificationTimedOut:(id)arg1;
- (void)growlNotificationWasClicked:(id)arg1;
- (void)growlIsReady;
- (NSData *)applicationIconDataForGrowl;
- (NSImage *)applicationIconForGrowl;
- (NSString *)applicationNameForGrowl;
- (NSDictionary *)registrationDictionaryForGrowl;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeScreenParameters:(NSNotification *)arg1;
- (void)applicationWillTerminate:(NSNotification *)arg1;
- (void)applicationDidUpdate:(NSNotification *)arg1;
- (void)applicationWillUpdate:(NSNotification *)arg1;
- (void)applicationDidResignActive:(NSNotification *)arg1;
- (void)applicationWillResignActive:(NSNotification *)arg1;
- (void)applicationDidBecomeActive:(NSNotification *)arg1;
- (void)applicationWillBecomeActive:(NSNotification *)arg1;
- (void)applicationDidUnhide:(NSNotification *)arg1;
- (void)applicationWillUnhide:(NSNotification *)arg1;
- (void)applicationDidHide:(NSNotification *)arg1;
- (void)applicationWillHide:(NSNotification *)arg1;
- (void)applicationDidFinishLaunching:(NSNotification *)arg1;
- (void)applicationWillFinishLaunching:(NSNotification *)arg1;
- (void)application:(NSApplication *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(NSApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(NSApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (NSError *)application:(NSApplication *)arg1 willPresentError:(NSError *)arg2;
- (NSMenu *)applicationDockMenu:(NSApplication *)arg1;
- (BOOL)applicationShouldHandleReopen:(NSApplication *)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)arg1;
- (unsigned long long)application:(NSApplication *)arg1 printFiles:(NSArray *)arg2 withSettings:(NSDictionary *)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(NSApplication *)arg1 printFile:(NSString *)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(NSString *)arg2;
- (BOOL)applicationOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)application:(NSApplication *)arg1 openTempFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openFiles:(NSArray *)arg2;
- (BOOL)application:(NSApplication *)arg1 openFile:(NSString *)arg2;
- (unsigned long long)applicationShouldTerminate:(NSApplication *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDatePickerCellDelegate <NSObject>

@optional
- (void)datePickerCell:(NSDatePickerCell *)arg1 validateProposedDateValue:(id *)arg2 timeInterval:(double *)arg3;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (NSString *)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (NSString *)debugDescription;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(NSTabView *)arg1;
- (void)tabView:(NSTabView *)arg1 didSelectTabViewItem:(NSTabViewItem *)arg2;
- (void)tabView:(NSTabView *)arg1 willSelectTabViewItem:(NSTabViewItem *)arg2;
- (BOOL)tabView:(NSTabView *)arg1 shouldSelectTabViewItem:(NSTabViewItem *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol NSUserNotificationCenterDelegate <NSObject>

@optional
- (BOOL)userNotificationCenter:(NSUserNotificationCenter *)arg1 shouldPresentNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didActivateNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didDeliverNotification:(NSUserNotification *)arg2;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol PSMTabStyle <NSObject>
- (void)drawTabBar:(PSMTabBarControl *)arg1 inRect:(struct CGRect)arg2;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawTabCell:(PSMTabBarCell *)arg1;
- (NSAttributedString *)attributedStringValueForTabCell:(PSMTabBarCell *)arg1;
- (NSAttributedString *)attributedObjectCountValueForTabCell:(PSMTabBarCell *)arg1;
- (double)tabCellHeight;
- (double)desiredWidthOfTabCell:(PSMTabBarCell *)arg1;
- (double)minimumWidthOfTabCell:(PSMTabBarCell *)arg1;
- (struct CGRect)objectCounterRectForTabCell:(PSMTabBarCell *)arg1;
- (struct CGRect)indicatorRectForTabCell:(PSMTabBarCell *)arg1;
- (struct CGRect)iconRectForTabCell:(PSMTabBarCell *)arg1;
- (struct CGRect)closeButtonRectForTabCell:(PSMTabBarCell *)arg1 withFrame:(struct CGRect)arg2;
- (struct CGRect)dragRectForTabCell:(PSMTabBarCell *)arg1 orientation:(int)arg2;
- (NSImage *)addTabButtonRolloverImage;
- (NSImage *)addTabButtonPressedImage;
- (NSImage *)addTabButtonImage;
- (void)setPosition:(int)arg1;
- (void)setOrientation:(int)arg1;
- (double)topMarginForTabBarControl;
- (double)rightMarginForTabBarControl;
- (double)leftMarginForTabBarControl;
- (NSString *)name;
@end

@protocol QLPreviewPanelDataSource
- (id <QLPreviewItem>)previewPanel:(QLPreviewPanel *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(QLPreviewPanel *)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(QLPreviewPanel *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(QLPreviewPanel *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewPanel:(QLPreviewPanel *)arg1 handleEvent:(NSEvent *)arg2;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface FlintAppDelegate : NSObject <NSApplicationDelegate, GrowlApplicationBridgeDelegate, BITCrashReportManagerDelegate, NSMenuDelegate>
{
    FlintAboutController *_aboutController;
    FlintLoginController *_loginController;
    FlintLogController *_logController;
    FlintPreferencesController *_preferencesController;
    FlintDownloadsController *_downloadsController;
    NSMutableArray *_windowControllers;
    NSStatusItem *_statusItem;
    BOOL _ignoreNextActivation;
    BOOL _sleeping;
    NSMenuItem *_checkForUpdatesMenuItem;
}

@property __weak NSMenuItem *checkForUpdatesMenuItem; // @synthesize checkForUpdatesMenuItem=_checkForUpdatesMenuItem;
@property BOOL sleeping; // @synthesize sleeping=_sleeping;
@property BOOL ignoreNextActivation; // @synthesize ignoreNextActivation=_ignoreNextActivation;
@property(retain) NSStatusItem *statusItem; // @synthesize statusItem=_statusItem;
@property(retain) NSMutableArray *windowControllers; // @synthesize windowControllers=_windowControllers;
@property(retain) FlintDownloadsController *downloadsController; // @synthesize downloadsController=_downloadsController;
@property(retain) FlintPreferencesController *preferencesController; // @synthesize preferencesController=_preferencesController;
@property(retain) FlintLogController *logController; // @synthesize logController=_logController;
@property(retain) FlintLoginController *loginController; // @synthesize loginController=_loginController;
@property(retain) FlintAboutController *aboutController; // @synthesize aboutController=_aboutController;
- (void).cxx_destruct;
- (void)checkForTrialExpiration;
- (void)checkForBetaExpiration;
- (void)showMainApplicationWindow;
- (BOOL)hasNetworkClientEntitlement;
- (void)growlNotificationWasClicked:(id)arg1;
- (id)registrationDictionaryForGrowl;
- (void)viewAcknowledgments:(id)arg1;
- (void)viewReleaseNotes:(id)arg1;
- (void)submitFeedback:(id)arg1;
- (void)viewHelp:(id)arg1;
- (void)startMonitoringNetworkStatus;
- (void)handleURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)toggleApp:(id)arg1;
- (void)removeStatusItem;
- (void)addStatusItem;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)isRoomOpen:(id)arg1;
- (void)flintWindowClosed:(id)arg1;
- (void)addWindowController:(id)arg1;
- (id)windowControllersForActiveSpace;
- (id)mostRecentlyUsedWindowControllers;
- (BOOL)needsToActivateMostRecentlyActiveRoom;
- (void)activateMostRecentlyActiveRoom;
- (void)activateMostRecentlyUsedWindow;
- (void)activateRoomWithRoomId:(unsigned long long)arg1;
- (void)activateRoom:(id)arg1;
- (void)bringWindowsToFront:(id)arg1;
- (void)newSearch:(id)arg1;
- (void)newWindow:(id)arg1;
- (void)saveWindows;
- (void)restoreWindows;
- (void)downloadUpload:(id)arg1;
- (void)showLog:(id)arg1;
- (void)showDownloads:(id)arg1;
- (void)showPreferences:(id)arg1;
- (void)showAbout:(id)arg1;
- (void)loginComplete:(id)arg1;
- (void)showLoginWindow;
- (void)computerDidWake:(id)arg1;
- (void)computerWillSleep:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;

@end

@interface FlintWindowController : NSWindowController <NSWindowDelegate, NSTabViewDelegate>
{
    BOOL _tabsEnabled;
    NSDictionary *_config;
    NSView *_trialView;
    NSTabView *_tabView;
    NSButton *_trialRemaining;
    NSMutableArray *_viewControllers;
    NSDate *_lastActivated;
    PSMTabBarControl *_tabBar;
}

+ (void)loadTranscriptForRoom:(id)arg1;
+ (id)windowController;
@property __weak PSMTabBarControl *tabBar; // @synthesize tabBar=_tabBar;
@property(retain) NSDate *lastActivated; // @synthesize lastActivated=_lastActivated;
@property(retain) NSMutableArray *viewControllers; // @synthesize viewControllers=_viewControllers;
@property __weak NSButton *trialRemaining; // @synthesize trialRemaining=_trialRemaining;
@property __weak NSTabView *tabView; // @synthesize tabView=_tabView;
@property __weak NSView *trialView; // @synthesize trialView=_trialView;
@property(retain) NSDictionary *config; // @synthesize config=_config;
@property BOOL tabsEnabled; // @synthesize tabsEnabled=_tabsEnabled;
- (void).cxx_destruct;
- (void)addBetaToWindow;
- (void)openWebsite:(id)arg1;
- (void)addTrialToWindow;
- (id)tabView:(id)arg1 toolTipForTabViewItem:(id)arg2;
- (id)tabView:(id)arg1 newTabBarForDraggedTabViewItem:(id)arg2 atPoint:(struct CGPoint)arg3;
- (void)tabView:(id)arg1 didDropTabViewItem:(id)arg2 inTabBar:(id)arg3;
- (BOOL)tabView:(id)arg1 shouldDropTabViewItem:(id)arg2 inTabBar:(id)arg3;
- (BOOL)tabView:(id)arg1 shouldDragTabViewItem:(id)arg2 fromTabBar:(id)arg3;
- (id)tabView:(id)arg1 menuForTabViewItem:(id)arg2;
- (id)allowedDraggedTypesForTabView:(id)arg1;
- (void)tabView:(id)arg1 didCloseTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)switchTabs:(id)arg1;
- (void)closeViewController:(id)arg1;
- (void)closeTabItem:(id)arg1;
- (void)addViewController:(id)arg1 forTab:(id)arg2;
- (void)selectTabForViewController:(id)arg1;
- (void)selectTabAtIndex:(unsigned long long)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)selectNextTab:(id)arg1;
- (void)addTabForViewController:(id)arg1 activate:(BOOL)arg2;
- (void)addTabForViewController:(id)arg1;
- (void)newTab:(id)arg1;
- (void)didUpdateTabPosition:(id)arg1;
- (void)updateWindowTitle;
- (void)loadSearchForAccount:(id)arg1;
- (void)loadTranscriptForRoom:(id)arg1 withDate:(id)arg2 message:(id)arg3 highlight:(id)arg4;
- (void)loadTranscriptForRoom:(id)arg1 withDate:(id)arg2 message:(id)arg3;
- (void)loadTranscriptForRoom:(id)arg1 withDate:(id)arg2;
- (void)loadTranscriptForRoom:(id)arg1;
- (void)activateRoomWithRoomId:(unsigned long long)arg1;
- (BOOL)hasRoom:(id)arg1;
- (int)actualRoomCount;
- (void)loadRoom:(id)arg1 inViewController:(id)arg2;
- (void)loadRoom:(id)arg1 background:(BOOL)arg2;
- (void)loadRoom:(id)arg1 newWindow:(BOOL)arg2;
- (void)loadRoom:(id)arg1;
- (void)loadLobbyInViewController:(id)arg1;
- (void)loadLobby;
- (BOOL)hasOpenRooms;
- (void)replaceViewController:(id)arg1 withViewController:(id)arg2 direction:(id)arg3;
- (id)viewControllerForTab:(id)arg1;
- (BOOL)isViewControllerActive:(id)arg1;
- (id)activeViewController;
- (void)forceClose:(id)arg1;
- (void)close:(id)arg1;
- (void)hideWindow;
- (id)windowConfig;
- (void)restoreFromConfig;
- (BOOL)validateMenuItem:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)resetTextSize:(id)arg1;
- (void)decreaseTextSize:(id)arg1;
- (void)increaseTextSize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)awakeFromNib;
- (id)description;
- (id)init;
- (void)dealloc;

@end

@interface FlintLoginController : NSWindowController <NSWindowDelegate>
{
    NSButton *_authButton;
    NSWindow *_authWindow;
    NSTextField *_status;
    NSProgressIndicator *_progress;
    WebView *_webView;
}

@property __weak WebView *webView; // @synthesize webView=_webView;
@property __weak NSProgressIndicator *progress; // @synthesize progress=_progress;
@property __weak NSTextField *status; // @synthesize status=_status;
@property NSWindow *authWindow; // @synthesize authWindow=_authWindow;
@property __weak NSButton *authButton; // @synthesize authButton=_authButton;
- (void).cxx_destruct;
- (void)authenticateWithCode:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)authenticate:(id)arg1;
- (void)cancel:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintBottomView : FlintGradientView
{
}

@end

@interface FlintEmbedController : NSWindowController <NSAnimationDelegate, NSWindowDelegate>
{
    NSImageView *_imageView;
    NSProgressIndicator *_progress;
    BOOL _scaled;
    FlintEmbed *_embed;
    AFImageRequestOperation *_downloadOperation;
    BOOL _zoomedOut;
    NSMenu *_contextMenu;
    NSScrollView *_scrollView;
    NSImage *_image;
}

+ (void)removeEmbedController:(id)arg1;
+ (void)addEmbedController:(id)arg1;
+ (id)embedControllers;
+ (void)showEmbedControllerForEmbed:(id)arg1;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(retain) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property __weak NSMenu *contextMenu; // @synthesize contextMenu=_contextMenu;
@property BOOL zoomedOut; // @synthesize zoomedOut=_zoomedOut;
@property(retain) AFImageRequestOperation *downloadOperation; // @synthesize downloadOperation=_downloadOperation;
@property(readonly, nonatomic) FlintEmbed *embed; // @synthesize embed=_embed;
@property BOOL scaled; // @synthesize scaled=_scaled;
@property __weak NSProgressIndicator *progress; // @synthesize progress=_progress;
@property(retain) NSImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)openInBrowser:(id)arg1;
- (void)saveImage:(id)arg1;
- (void)copyURL:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)updateWindowTitle;
- (void)windowDidResize:(id)arg1;
- (struct CGRect)maxWindowFrame;
- (void)showImage;
- (void)downloadImage;
- (void)animationDidEnd:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)close:(id)arg1;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)showError;
- (void)embedDownloadComplete:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;
- (id)initWithEmbed:(id)arg1;
- (void)dealloc;

@end

@interface FlintGradientView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FlintProgressIndicator : NSView
{
    NSColor *_color;
    double _minValue;
    double _doubleValue;
    double _maxValue;
}

@property double maxValue; // @synthesize maxValue=_maxValue;
@property(nonatomic) double doubleValue; // @synthesize doubleValue=_doubleValue;
@property double minValue; // @synthesize minValue=_minValue;
@property(retain) NSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FlintLobbyController : FlintViewController <NSTableViewDataSource, NSTableViewDelegate, FlintTableViewDelegate>
{
    NSMutableArray *_data;
    NSMutableDictionary *_accountStatus;
    FlintTableView *_tableView;
    NSDictionary *_currentFind;
    BOOL _awake;
}

@property BOOL awake; // @synthesize awake=_awake;
@property(retain) NSDictionary *currentFind; // @synthesize currentFind=_currentFind;
@property __weak FlintTableView *tableView; // @synthesize tableView=_tableView;
@property(retain) NSMutableDictionary *accountStatus; // @synthesize accountStatus=_accountStatus;
@property(retain) NSMutableArray *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (void)accountsUpdated:(id)arg1;
- (void)viewTranscript:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)tableView:(id)arg1 didClickRow:(long long)arg2 inView:(id)arg3 event:(id)arg4;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)roomControllerUpdated:(id)arg1;
- (id)objectForRow:(long long)arg1;
- (void)loadRooms;
- (void)viewWillDisappear;
- (void)viewDidBecomeActive;
- (void)flattenAccounts;
- (id)containerView;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;

@end

@interface FlintPreferencesController : NSWindowController <NSToolbarDelegate, NSTableViewDelegate, NSTableViewDataSource, NSWindowDelegate>
{
    NSView *_accountsView;
    NSView *_advancedView;
    NSTextField *_keywords;
    NSTableView *_accountsTable;
    NSToolbar *_toolbar;
    NSTextField *_accountStatus;
    NSPopUpButton *_keywordNotifications;
    NSView *_currentView;
    NSProgressIndicator *_progress;
    NSButton *_autoPlayGifs;
    NSView *_generalView;
    NSPopUpButton *_messagesNotifications;
    IGIsolatedCookieWebView *_webView;
    NSPopUpButton *_sounds;
    NSButton *_showMenuBarIcon;
    NSView *_notificationsView;
    NSString *_currentToolbarIdentifier;
    NSView *_view;
    NSPopUpButton *_menuBarOptions;
    NSButton *_downloadsPath;
    NSWindow *_accountWindow;
    NSTextField *_inputFontSize;
    NSButton *_showInline;
}

@property __weak NSButton *showInline; // @synthesize showInline=_showInline;
@property __weak NSTextField *inputFontSize; // @synthesize inputFontSize=_inputFontSize;
@property NSWindow *accountWindow; // @synthesize accountWindow=_accountWindow;
@property __weak NSButton *downloadsPath; // @synthesize downloadsPath=_downloadsPath;
@property __weak NSPopUpButton *menuBarOptions; // @synthesize menuBarOptions=_menuBarOptions;
@property __weak NSView *view; // @synthesize view=_view;
@property(retain) NSString *currentToolbarIdentifier; // @synthesize currentToolbarIdentifier=_currentToolbarIdentifier;
@property __weak NSView *notificationsView; // @synthesize notificationsView=_notificationsView;
@property __weak NSButton *showMenuBarIcon; // @synthesize showMenuBarIcon=_showMenuBarIcon;
@property __weak NSPopUpButton *sounds; // @synthesize sounds=_sounds;
@property(retain) IGIsolatedCookieWebView *webView; // @synthesize webView=_webView;
@property __weak NSPopUpButton *messagesNotifications; // @synthesize messagesNotifications=_messagesNotifications;
@property __weak NSView *generalView; // @synthesize generalView=_generalView;
@property __weak NSButton *autoPlayGifs; // @synthesize autoPlayGifs=_autoPlayGifs;
@property __weak NSProgressIndicator *progress; // @synthesize progress=_progress;
@property(nonatomic) __weak NSView *currentView; // @synthesize currentView=_currentView;
@property __weak NSPopUpButton *keywordNotifications; // @synthesize keywordNotifications=_keywordNotifications;
@property __weak NSTextField *accountStatus; // @synthesize accountStatus=_accountStatus;
@property __weak NSToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property __weak NSTableView *accountsTable; // @synthesize accountsTable=_accountsTable;
@property __weak NSTextField *keywords; // @synthesize keywords=_keywords;
@property __weak NSView *advancedView; // @synthesize advancedView=_advancedView;
@property __weak NSView *accountsView; // @synthesize accountsView=_accountsView;
- (void).cxx_destruct;
- (void)toggleHideInsteadOfClose:(id)arg1;
- (void)changeDownloadsPath:(id)arg1;
- (void)updateInputFontSize:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)cancelAuthentication:(id)arg1;
- (void)removeAccount:(id)arg1;
- (void)addAccount:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)updateKeywords:(id)arg1;
- (void)updateNotificationMenu:(id)arg1;
- (void)updateTabPosition:(id)arg1;
- (void)toggleShowEnterLeaveMessages:(id)arg1;
- (void)toggleAutoPlayGifs:(id)arg1;
- (void)updateInlineImagesMode:(id)arg1;
- (void)refreshMessages:(id)arg1;
- (void)toggleMenuBarCounts:(id)arg1;
- (void)toggleMenuBarIcon:(id)arg1;
- (void)playSound:(id)arg1;
- (void)toolbarItemSelected:(id)arg1;
- (void)close:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintTextView : NSTextView <FlintAutocompleteControllerDelegate, NSPopoverDelegate>
{
    BOOL _paste;
    FlintAutocompleteController *_autocompleteController;
    BOOL _forcePaste;
    NSPopover *_popover;
}

+ (void)initialize;
@property(retain) NSPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) BOOL forcePaste; // @synthesize forcePaste=_forcePaste;
@property(retain) FlintAutocompleteController *autocompleteController; // @synthesize autocompleteController=_autocompleteController;
@property(nonatomic) BOOL paste; // @synthesize paste=_paste;
- (void).cxx_destruct;
- (void)drawViewBackgroundInRect:(struct CGRect)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (id)readablePasteboardTypes;
- (void)togglePaste:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)isPaste;
- (void)continueAutocompleteWithString:(id)arg1;
- (void)insertAutocompleteItem:(id)arg1;
- (struct _NSRange)rangeForUserCompletion;
- (void)insertTab:(id)arg1;
- (void)popoverDidClose:(id)arg1;
- (void)autocomplete;
- (BOOL)isCursorAtBeginning;
- (void)clearText;
- (void)refresh;
- (void)updateFontSize:(id)arg1;
- (void)reset;
- (void)insertNewline:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface FlintUsersController : NSViewController <NSTableViewDelegate, NSTableViewDataSource>
{
    FlintRoomController *_roomController;
    NSTableView *_tableView;
    NSArray *_users;
    int _tableSize;
}

@property int tableSize; // @synthesize tableSize=_tableSize;
@property(retain, nonatomic) NSArray *users; // @synthesize users=_users;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) FlintRoomController *roomController; // @synthesize roomController=_roomController;
- (void).cxx_destruct;
- (void)refreshUser:(id)arg1;
- (id)activeIndexes;
- (void)doubleClickedRow:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)refresh:(id)arg1;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;

@end

@interface PSMMetalTabStyle : NSObject <PSMTabStyle>
{
    int orientation;
    int _position;
    PSMTabBarControl *tabBar;
}

+ (void)initialize;
- (void)drawTabBar:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawInteriorWithTabCell:(id)arg1 inView:(id)arg2;
- (void)drawTabCell:(id)arg1;
- (id)attributedStringValueForTabCell:(id)arg1;
- (id)attributedObjectCountValueForTabCell:(id)arg1;
- (double)tabCellHeight;
- (double)desiredWidthOfTabCell:(id)arg1;
- (double)minimumWidthOfTabCell:(id)arg1;
- (struct CGRect)objectCounterRectForTabCell:(id)arg1;
- (struct CGRect)indicatorRectForTabCell:(id)arg1;
- (struct CGRect)iconRectForTabCell:(id)arg1;
- (struct CGRect)closeButtonRectForTabCell:(id)arg1 withFrame:(struct CGRect)arg2;
- (struct CGRect)dragRectForTabCell:(id)arg1 orientation:(int)arg2;
- (id)addTabButtonRolloverImage;
- (id)addTabButtonPressedImage;
- (id)addTabButtonImage;
- (void)setPosition:(int)arg1;
- (void)setOrientation:(int)arg1;
- (double)topMarginForTabBarControl;
- (double)rightMarginForTabBarControl;
- (double)leftMarginForTabBarControl;
- (id)name;

@end

@interface PSMOverflowPopUpButton : NSPopUpButton
{
    NSImage *_PSMTabBarOverflowPopUpImage;
    NSImage *_PSMTabBarOverflowDownPopUpImage;
    BOOL _down;
    BOOL _animatingAlternateImage;
    NSTimer *_animationTimer;
    double _animationValue;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)animateStep:(id)arg1;
- (BOOL)animatingAlternateImage;
- (void)setAnimatingAlternateImage:(BOOL)arg1;
- (void)notificationReceived:(id)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;

@end

@interface PSMProgressIndicator : NSProgressIndicator
{
}

- (void)stopAnimation:(id)arg1;
- (void)setHidden:(BOOL)arg1;

@end

@interface PSMRolloverButton : NSButton
{
    NSImage *_rolloverImage;
    NSImage *_usualImage;
    long long _myTrackingRectTag;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)resetCursorRects;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)removeTrackingRect;
- (void)addTrackingRect;
- (void)rolloverFrameDidChange:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)rolloverImage;
- (void)setRolloverImage:(id)arg1;
- (id)usualImage;
- (void)setUsualImage:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface PSMTabBarCell : NSActionCell
{
    struct CGRect _frame;
    struct CGSize _stringSize;
    long long _currentStep;
    BOOL _isPlaceholder;
    long long _tabState;
    long long _closeButtonTrackingTag;
    long long _cellTrackingTag;
    BOOL _closeButtonOver;
    BOOL _closeButtonPressed;
    PSMProgressIndicator *_indicator;
    BOOL _isInOverflowMenu;
    BOOL _hasCloseButton;
    BOOL _isCloseButtonSuppressed;
    BOOL _hasIcon;
    BOOL _hasLargeImage;
    long long _count;
    NSColor *_countColor;
    BOOL _isEdited;
}

- (id)accessibilityFocusedUIElement:(struct CGPoint)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)dragImage;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (double)desiredWidthOfCell;
- (double)minimumWidthOfCell;
- (struct CGRect)closeButtonRectForFrame:(struct CGRect)arg1;
- (struct CGRect)indicatorRectForFrame:(struct CGRect)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setIsEdited:(BOOL)arg1;
- (BOOL)isEdited;
- (void)setCurrentStep:(long long)arg1;
- (long long)currentStep;
- (void)setIsPlaceholder:(BOOL)arg1;
- (BOOL)isPlaceholder;
- (void)setCountColor:(id)arg1;
- (id)countColor;
- (void)setCount:(long long)arg1;
- (long long)count;
- (void)setHasLargeImage:(BOOL)arg1;
- (BOOL)hasLargeImage;
- (void)setHasIcon:(BOOL)arg1;
- (BOOL)hasIcon;
- (BOOL)isCloseButtonSuppressed;
- (void)setCloseButtonSuppressed:(BOOL)arg1;
- (void)setHasCloseButton:(BOOL)arg1;
- (BOOL)hasCloseButton;
- (void)setCloseButtonOver:(BOOL)arg1;
- (BOOL)closeButtonOver;
- (void)setCloseButtonPressed:(BOOL)arg1;
- (BOOL)closeButtonPressed;
- (void)setIsInOverflowMenu:(BOOL)arg1;
- (BOOL)isInOverflowMenu;
- (id)indicator;
- (void)setTabState:(long long)arg1;
- (long long)tabState;
- (id)attributedStringValue;
- (struct CGSize)stringSize;
- (void)setStringValue:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (double)width;
- (void)setCellTrackingTag:(long long)arg1;
- (long long)cellTrackingTag;
- (void)setCloseButtonTrackingTag:(long long)arg1;
- (long long)closeButtonTrackingTag;
- (void)dealloc;
- (id)initPlaceholderWithFrame:(struct CGRect)arg1 expanded:(BOOL)arg2 inControlView:(id)arg3;
- (id)initWithControlView:(id)arg1;

@end

@interface PSMTabBarControl : NSControl
{
    NSMutableArray *_cells;
    NSTabView *tabView;
    PSMOverflowPopUpButton *_overflowPopUpButton;
    PSMRolloverButton *_addTabButton;
    PSMTabBarController *_controller;
    NSTimer *_springTimer;
    NSTabViewItem *_tabViewItemWithSpring;
    id <PSMTabStyle> style;
    BOOL _canCloseOnlyTab;
    BOOL _disableTabClose;
    BOOL _hideForSingleTab;
    BOOL _showAddTabButton;
    BOOL _sizeCellsToFit;
    BOOL _useOverflowMenu;
    BOOL _alwaysShowActiveTab;
    BOOL _allowsScrubbing;
    long long _resizeAreaCompensation;
    int _orientation;
    int _position;
    BOOL _automaticallyAnimates;
    NSTimer *_animationTimer;
    int _tearOffStyle;
    BOOL _allowsBackgroundTabClosing;
    BOOL _selectsTabsOnMouseDown;
    BOOL _allowsResizing;
    BOOL _resizing;
    long long _cellMinWidth;
    long long _cellMaxWidth;
    long long _cellOptimumWidth;
    long long _currentStep;
    BOOL _isHidden;
    id partnerView;
    BOOL _awakenedFromNib;
    long long _tabBarWidth;
    NSTimer *_showHideAnimationTimer;
    NSEvent *_lastMouseDownEvent;
    BOOL _didDrag;
    BOOL _closeClicked;
    id delegate;
}

+ (id)bundle;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (long long)numberOfVisibleTabs;
- (id)lastVisibleTab;
- (id)cellForPoint:(struct CGPoint)arg1 cellFrame:(struct CGRect *)arg2;
- (id)representedTabViewItems;
- (void)unbindPropertiesForCell:(id)arg1 identifier:(id)arg2;
- (void)_bindPropertiesForCell:(id)arg1 andTabViewItem:(id)arg2;
- (void)bindPropertiesForCell:(id)arg1 andTabViewItem:(id)arg2;
- (void)placeView:(struct CGRect)arg1;
- (struct CGSize)maximumFrameSizeFromKnobPosition:(long long)arg1;
- (struct CGSize)minimumFrameSizeFromKnobPosition:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)resetCursorRects;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)viewDidMoveToWindow;
- (void)frameDidChange:(id)arg1;
- (void)tabNothing:(id)arg1;
- (void)tabClick:(id)arg1;
- (void)closeTabClick:(id)arg1;
- (void)overflowMenuAction:(id)arg1;
- (void)fireSpring:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysWhileDragging;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)_checkWindowFrame;
- (void)_positionOverflowMenu;
- (void)_setupTrackingRectsForCell:(id)arg1;
- (void)_animateCells:(id)arg1;
- (void)update:(BOOL)arg1;
- (void)update;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)setPartnerView:(id)arg1;
- (id)partnerView;
- (BOOL)isAnimating;
- (BOOL)isTabBarHidden;
- (void)hideTabBar:(BOOL)arg1 animate:(BOOL)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeTabForCell:(id)arg1;
- (void)addTabViewItem:(id)arg1;
- (void)setTearOffStyle:(int)arg1;
- (int)tearOffStyle;
- (void)setAllowsScrubbing:(BOOL)arg1;
- (BOOL)allowsScrubbing;
- (void)setAlwaysShowActiveTab:(BOOL)arg1;
- (BOOL)alwaysShowActiveTab;
- (void)setAutomaticallyAnimates:(BOOL)arg1;
- (BOOL)automaticallyAnimates;
- (void)setSelectsTabsOnMouseDown:(BOOL)arg1;
- (BOOL)selectsTabsOnMouseDown;
- (void)setAllowsResizing:(BOOL)arg1;
- (BOOL)allowsResizing;
- (void)setAllowsBackgroundTabClosing:(BOOL)arg1;
- (BOOL)allowsBackgroundTabClosing;
- (id)overflowPopUpButton;
- (id)addTabButton;
- (void)setUseOverflowMenu:(BOOL)arg1;
- (BOOL)useOverflowMenu;
- (void)setSizeCellsToFit:(BOOL)arg1;
- (BOOL)sizeCellsToFit;
- (void)setCellOptimumWidth:(long long)arg1;
- (long long)cellOptimumWidth;
- (void)setCellMaxWidth:(long long)arg1;
- (long long)cellMaxWidth;
- (void)setCellMinWidth:(long long)arg1;
- (long long)cellMinWidth;
- (void)setShowAddTabButton:(BOOL)arg1;
- (BOOL)showAddTabButton;
- (void)setHideForSingleTab:(BOOL)arg1;
- (BOOL)hideForSingleTab;
- (void)setDisableTabClose:(BOOL)arg1;
- (BOOL)disableTabClose;
- (void)setCanCloseOnlyTab:(BOOL)arg1;
- (BOOL)canCloseOnlyTab;
- (void)setPosition:(int)arg1;
- (int)position;
- (void)setOrientation:(int)arg1;
- (int)orientation;
- (void)setStyleNamed:(id)arg1;
- (void)setStyle:(id)arg1;
- (id)styleName;
- (id)style;
- (void)setTabView:(id)arg1;
- (id)tabView;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setLastMouseDownEvent:(id)arg1;
- (id)lastMouseDownEvent;
- (id)cells;
- (void)windowStatusDidChange:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initAddedProperties;
- (struct CGRect)genericCellRect;
- (double)availableCellWidth;

@end

@interface PSMTabBarController : NSObject <NSMenuDelegate>
{
    PSMTabBarControl *_control;
    NSMutableArray *_cellTrackingRects;
    NSMutableArray *_closeButtonTrackingRects;
    NSMutableArray *_cellFrames;
    struct CGRect _addButtonRect;
    NSMenu *_overflowMenu;
}

- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (void)_setupCells:(id)arg1 withWidths:(id)arg2;
- (id)_generateWidthsFromCells:(id)arg1;
- (long long)_shrinkWidths:(id)arg1 towardMinimum:(long long)arg2 withAvailableWidth:(double)arg3;
- (void)layoutCells;
- (void)setSelectedCell:(id)arg1;
- (struct CGRect)cellFrameAtIndex:(long long)arg1;
- (struct CGRect)closeButtonTrackingRectAtIndex:(long long)arg1;
- (struct CGRect)cellTrackingRectAtIndex:(long long)arg1;
- (id)overflowMenu;
- (struct CGRect)addButtonRect;
- (void)dealloc;
- (id)initWithTabBarControl:(id)arg1;

@end

@interface PSMTabDragAssistant : NSObject
{
    PSMTabBarControl *_sourceTabBar;
    PSMTabBarControl *_destinationTabBar;
    NSMutableSet *_participatingTabBars;
    PSMTabBarCell *_draggedCell;
    long long _draggedCellIndex;
    BOOL _isDragging;
    PSMTabDragWindowController *_draggedTab;
    PSMTabDragWindowController *_draggedView;
    struct CGSize _dragWindowOffset;
    NSTimer *_fadeTimer;
    BOOL _centersDragWindows;
    int _currentTearOffStyle;
    NSTimer *_animationTimer;
    NSMutableArray *_sineCurveWidths;
    struct CGPoint _currentMouseLoc;
    PSMTabBarCell *_targetCell;
}

+ (id)sharedDragAssistant;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)removeAllPlaceholdersFromTabBar:(id)arg1;
- (void)distributePlaceholdersInTabBar:(id)arg1;
- (void)distributePlaceholdersInTabBar:(id)arg1 withDraggedCell:(id)arg2;
- (void)calculateDragAnimationForTabBar:(id)arg1;
- (void)animateDrag:(id)arg1;
- (void)_expandWindowTimerFired:(id)arg1;
- (void)_expandWindow:(id)arg1 atPoint:(struct CGPoint)arg2;
- (id)_miniwindowImageOfWindow:(id)arg1;
- (id)_imageForViewOfCell:(id)arg1 styleMask:(unsigned long long *)arg2;
- (void)fadeOutDragWindow:(id)arg1;
- (void)fadeInDragWindow:(id)arg1;
- (void)draggingMovedTo:(struct CGPoint)arg1;
- (void)draggingBeganAt:(struct CGPoint)arg1;
- (void)finishDrag;
- (void)draggedImageEndedAt:(struct CGPoint)arg1 operation:(unsigned long long)arg2;
- (void)performDragOperation;
- (void)draggingExitedTabBar:(id)arg1;
- (void)draggingUpdatedInTabBar:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)draggingEnteredTabBar:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)startDraggingCell:(id)arg1 fromTabBar:(id)arg2 withMouseDownEvent:(id)arg3;
- (void)setTargetCell:(id)arg1;
- (id)targetCell;
- (void)setCurrentMouseLoc:(struct CGPoint)arg1;
- (struct CGPoint)currentMouseLoc;
- (void)setIsDragging:(BOOL)arg1;
- (BOOL)isDragging;
- (void)setDraggedCellIndex:(long long)arg1;
- (long long)draggedCellIndex;
- (void)setDraggedCell:(id)arg1;
- (id)draggedCell;
- (void)setDestinationTabBar:(id)arg1;
- (id)destinationTabBar;
- (void)setSourceTabBar:(id)arg1;
- (id)sourceTabBar;
- (void)dealloc;
- (id)init;

@end

@interface PSMTabDragView : NSView
{
    NSImage *_image;
    NSImage *_alternateImage;
    double _alpha;
}

- (void)setAlternateImage:(id)arg1;
- (id)alternateImage;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setFadeValue:(double)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PSMTabDragWindow : NSWindow
{
    PSMTabDragView *_dragView;
}

+ (id)dragWindowWithImage:(id)arg1 styleMask:(unsigned long long)arg2;
- (id)dragView;
- (id)initWithImage:(id)arg1 styleMask:(unsigned long long)arg2;

@end

@interface PSMTabDragWindowController : NSWindowController
{
    int _tearOffStyle;
    PSMTabDragView *_view;
    NSAnimation *_animation;
    NSTimer *_timer;
    BOOL _showingAlternate;
    struct CGRect _originalWindowFrame;
}

- (void)animateTimer:(id)arg1;
- (void)switchImages;
- (BOOL)isAnimating;
- (void)setAlternateImage:(id)arg1;
- (id)alternateImage;
- (id)image;
- (void)dealloc;
- (id)initWithImage:(id)arg1 styleMask:(unsigned long long)arg2 tearOffStyle:(int)arg3;

@end

@interface FlintRoomController : FlintViewController <FlintCampfireRoomConnectionDelegate, FlintPasteboardHandlerDelegate, FlintInputDelegate>
{
    FlintCampfireRoom *_room;
    BOOL _loadingEarlierMessages;
    FlintUsersController *_usersController;
    FlintSplitView *_splitView;
    FlintUnreadCounts *_unreadCounts;
    FlintMessagesViewController *_messagesController;
    FlintCampfireRoomConnection *_connection;
    FlintBottomViewController *_bottomViewController;
    NSMutableSet *_postedMessages;
    long long _postingQueue;
    FlintAccount *_account;
    NSMenu *_recentUploads;
    BOOL _awake;
    FlintMessagesCollection *_messagesCollection;
    NSView *_sidebarView;
    BOOL _reloading;
    BOOL _hasLoadedEarlierMessages;
    NSView *_mainView;
    NSPopover *_popover;
}

@property(retain) NSPopover *popover; // @synthesize popover=_popover;
@property __weak NSView *mainView; // @synthesize mainView=_mainView;
@property BOOL hasLoadedEarlierMessages; // @synthesize hasLoadedEarlierMessages=_hasLoadedEarlierMessages;
@property BOOL reloading; // @synthesize reloading=_reloading;
@property __weak NSView *sidebarView; // @synthesize sidebarView=_sidebarView;
@property(readonly) FlintMessagesCollection *messagesCollection; // @synthesize messagesCollection=_messagesCollection;
@property BOOL awake; // @synthesize awake=_awake;
@property(retain) NSMenu *recentUploads; // @synthesize recentUploads=_recentUploads;
@property(readonly) FlintAccount *account; // @synthesize account=_account;
@property long long postingQueue; // @synthesize postingQueue=_postingQueue;
@property(retain) NSMutableSet *postedMessages; // @synthesize postedMessages=_postedMessages;
@property(retain) FlintBottomViewController *bottomViewController; // @synthesize bottomViewController=_bottomViewController;
@property(retain) FlintCampfireRoomConnection *connection; // @synthesize connection=_connection;
@property(retain) FlintMessagesViewController *messagesController; // @synthesize messagesController=_messagesController;
@property(retain) FlintUnreadCounts *unreadCounts; // @synthesize unreadCounts=_unreadCounts;
@property __weak FlintSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain) FlintUsersController *usersController; // @synthesize usersController=_usersController;
@property BOOL loadingEarlierMessages; // @synthesize loadingEarlierMessages=_loadingEarlierMessages;
@property(readonly) FlintCampfireRoom *room; // @synthesize room=_room;
- (void).cxx_destruct;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)sidebarResized:(id)arg1;
- (void)showErrorWithMessage:(id)arg1;
- (id)containerView;
- (void)insertBottomView;
- (void)postMessageNotification:(id)arg1;
- (void)updatedEnterLeaveMessages:(id)arg1;
- (void)accountsUpdated:(id)arg1;
- (void)loadEarlierMessages:(id)arg1;
- (void)clearBacklog:(id)arg1;
- (void)toggleUsers:(id)arg1;
- (void)handleOpenUpload:(id)arg1;
- (void)mute:(id)arg1;
- (void)viewTranscript:(id)arg1;
- (void)toggleRoomLock:(id)arg1;
- (void)leave:(id)arg1;
- (void)openRoomInBrowser:(id)arg1;
- (void)insertUser:(id)arg1;
- (void)changeRoomTopic:(id)arg1;
- (void)reloadRoom:(id)arg1;
- (void)clearUnreadCounts;
- (void)handleNotifications:(id)arg1;
- (void)fetchRoomInfo;
- (void)processMessage:(id)arg1 streamed:(BOOL)arg2;
- (void)connectionErrorOccurred:(id)arg1;
- (void)connectionDidConnect;
- (void)connectionDidReceiveMessages:(id)arg1 streamed:(BOOL)arg2;
- (void)reconnect;
- (void)reconnectRoomNotification:(id)arg1;
- (void)disconnect;
- (void)disconnectRoomNotification:(id)arg1;
- (void)connect;
- (void)fetchUploadForMessage:(id)arg1;
- (void)roomDidFetchRecentUploads;
- (void)fetchRecentUploads;
- (void)uploadFiles:(id)arg1;
- (void)uploadFile:(id)arg1;
- (void)postMessage:(id)arg1 paste:(BOOL)arg2;
- (void)unlockRoom;
- (void)lockRoom;
- (void)updateRoomTitle;
- (id)windowTitle;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)validateMenuItem:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)paste:(id)arg1;
- (void)viewWillClose;
- (void)windowWillClose;
- (void)viewWillDisappear;
- (void)viewDidBecomeActive;
- (void)awakeFromNib;
- (id)description;
- (id)initWithRoom:(id)arg1;
- (void)dealloc;

@end

@interface FlintErrorView : NSView
{
    NSTextField *_textField;
}

+ (id)stringAttributes;
@property(retain) NSTextField *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)setError:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FlintWindow : NSWindow
{
}

- (BOOL)performKeyEquivalent:(id)arg1;

@end

@interface FlintPasteController : NSWindowController <NSWindowDelegate>
{
    NSTextView *_textView;
    NSString *_paste;
}

@property(nonatomic) NSTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) NSString *paste; // @synthesize paste=_paste;
- (void).cxx_destruct;
- (void)windowWillClose:(id)arg1;
- (void)close:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintTrial : NSObject <NSCoding>
{
    NSDate *_startDate;
    NSString *_version;
}

+ (id)trial;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (BOOL)isTrialFromOlderVersion;
- (int)daysRemaining;
- (int)daysUsed;
- (BOOL)hasExpired;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface FlintRoomTopicController : NSWindowController <NSWindowDelegate>
{
    NSButton *_ok;
    NSProgressIndicator *_spinner;
    NSTextField *_error;
    FlintCampfireRoom *_room;
    NSTextField *_topic;
    FlintAccount *_account;
}

@property(retain, nonatomic) FlintAccount *account; // @synthesize account=_account;
@property(nonatomic) __weak NSTextField *topic; // @synthesize topic=_topic;
@property(retain, nonatomic) FlintCampfireRoom *room; // @synthesize room=_room;
@property(nonatomic) __weak NSTextField *error; // @synthesize error=_error;
@property(nonatomic) __weak NSProgressIndicator *spinner; // @synthesize spinner=_spinner;
@property(nonatomic) __weak NSButton *ok; // @synthesize ok=_ok;
- (void).cxx_destruct;
- (void)changeTopic:(id)arg1;
- (void)cancel:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintDownloadsController : NSWindowController <NSTableViewDataSource, NSTableViewDelegate, QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
    NSMutableArray *_downloads;
    NSTableView *_tableView;
}

@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain) NSMutableArray *downloads; // @synthesize downloads=_downloads;
- (void).cxx_destruct;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)quickLookUploadAtIndex:(long long)arg1;
- (void)openDownloadInFinder:(id)arg1;
- (void)openDownload:(id)arg1;
- (void)downloadProgressed:(id)arg1;
- (void)downloadUpload:(id)arg1;
- (void)close:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintTranscriptController : FlintViewController <NSDatePickerCellDelegate>
{
    BOOL _awake;
    NSButton *_day;
    FlintAccount *_account;
    NSView *_navigationBar;
    FlintCampfireMessage *_message;
    NSDate *_date;
    FlintMessagesViewController *_messagesController;
    NSString *_highlight;
    NSTableView *_tableView;
    NSDatePicker *_datePicker;
    FlintCampfireRoom *_room;
    NSView *_contentView;
    FlintMessagesCollection *_messagesCollection;
    NSPopover *_datePopover;
}

@property __weak NSPopover *datePopover; // @synthesize datePopover=_datePopover;
@property(retain) FlintMessagesCollection *messagesCollection; // @synthesize messagesCollection=_messagesCollection;
@property __weak NSView *contentView; // @synthesize contentView=_contentView;
@property(readonly) FlintCampfireRoom *room; // @synthesize room=_room;
@property __weak NSDatePicker *datePicker; // @synthesize datePicker=_datePicker;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(copy, nonatomic) NSString *highlight; // @synthesize highlight=_highlight;
@property(retain) FlintMessagesViewController *messagesController; // @synthesize messagesController=_messagesController;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(retain) FlintCampfireMessage *message; // @synthesize message=_message;
@property __weak NSView *navigationBar; // @synthesize navigationBar=_navigationBar;
@property(readonly) FlintAccount *account; // @synthesize account=_account;
@property __weak NSButton *day; // @synthesize day=_day;
@property BOOL awake; // @synthesize awake=_awake;
- (void).cxx_destruct;
- (id)containerView;
- (void)resize:(id)arg1;
- (id)linkForRoom;
- (void)dateSelected:(id)arg1;
- (void)chooseDate:(id)arg1;
- (void)jumpToBottom:(id)arg1;
- (void)jumpToTop:(id)arg1;
- (void)openRoomInBrowser:(id)arg1;
- (void)reloadRoom:(id)arg1;
- (void)loadNextDay:(id)arg1;
- (void)loadPreviousDay:(id)arg1;
- (void)fetchUploadForMessage:(id)arg1;
- (void)loadTranscriptForDate:(id)arg1;
- (void)refreshDayWithDate:(id)arg1;
- (void)viewWillClose;
- (void)awakeFromNib;
- (id)initWithRoom:(id)arg1 date:(id)arg2 highlight:(id)arg3;
- (id)initWithRoom:(id)arg1;
- (void)dealloc;

@end

@interface FlintMigration : NSObject
{
}

+ (void)migrateAccountsFromCache;
+ (void)migrateAccountsFromPreferences;
+ (void)checkForMigrations;

@end

@interface FlintViewController : NSViewController <NSUserInterfaceValidations, NSSplitViewDelegate>
{
    NSProgressIndicator *_spinner;
    NSTabViewItem *_tabViewItem;
    NSPopover *_errorPopover;
    long long _objectCount;
    NSString *_error;
    FlintErrorView *_errorView;
    FlintWindowController *_windowController;
    NSButton *_errorButton;
}

@property(retain) NSButton *errorButton; // @synthesize errorButton=_errorButton;
@property FlintWindowController *windowController; // @synthesize windowController=_windowController;
@property(retain) FlintErrorView *errorView; // @synthesize errorView=_errorView;
@property(retain) NSString *error; // @synthesize error=_error;
@property(nonatomic) long long objectCount; // @synthesize objectCount=_objectCount;
@property(retain) NSPopover *errorPopover; // @synthesize errorPopover=_errorPopover;
@property __weak NSTabViewItem *tabViewItem; // @synthesize tabViewItem=_tabViewItem;
@property(retain) NSProgressIndicator *spinner; // @synthesize spinner=_spinner;
- (void).cxx_destruct;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)displayError:(id)arg1;
- (void)hideError;
- (void)showError;
- (void)removeSpinner;
- (void)showSpinner;
- (void)removeView:(id)arg1 animated:(BOOL)arg2;
- (void)insertViewAtBottom:(id)arg1 animated:(BOOL)arg2;
- (void)insertViewAtBottom:(id)arg1;
- (void)insertViewAtTop:(id)arg1 animated:(BOOL)arg2;
- (void)insertViewAtTop:(id)arg1;
- (id)containerView;
- (id)windowTitle;
- (void)viewWillDisappear;
- (void)viewWillClose;
- (void)viewDidBecomeActive;
- (void)windowWillClose;
- (void)setTitle:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;
- (void)dealloc;

@end

@interface FlintNavigationBar : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FlintSearchController : FlintViewController <NSTableViewDelegate, NSTableViewDataSource>
{
    FlintAccount *_account;
    NSButton *_nextButton;
    NSTextField *_resultsLabel;
    NSProgressIndicator *_searchProgress;
    long long _startIndex;
    NSView *_navigationBar;
    NSButton *_previousButton;
    NSTableView *_tableView;
    NSArray *_messages;
    NSSearchField *_searchField;
    NSMenu *_searchMenu;
    NSString *_previousSearchTerm;
}

@property(retain) NSString *previousSearchTerm; // @synthesize previousSearchTerm=_previousSearchTerm;
@property(nonatomic) __weak NSMenu *searchMenu; // @synthesize searchMenu=_searchMenu;
@property(nonatomic) __weak NSSearchField *searchField; // @synthesize searchField=_searchField;
@property(retain) NSArray *messages; // @synthesize messages=_messages;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak NSButton *previousButton; // @synthesize previousButton=_previousButton;
@property(nonatomic) __weak NSView *navigationBar; // @synthesize navigationBar=_navigationBar;
@property long long startIndex; // @synthesize startIndex=_startIndex;
@property(nonatomic) __weak NSProgressIndicator *searchProgress; // @synthesize searchProgress=_searchProgress;
@property(nonatomic) __weak NSTextField *resultsLabel; // @synthesize resultsLabel=_resultsLabel;
@property(nonatomic) __weak NSButton *nextButton; // @synthesize nextButton=_nextButton;
@property __weak FlintAccount *account; // @synthesize account=_account;
- (void).cxx_destruct;
- (void)doubleClickedRow:(id)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)setSearchAccount:(id)arg1;
- (void)resetSearch;
- (void)clearMessages;
- (void)searchForTerm:(id)arg1;
- (void)next:(id)arg1;
- (void)previous:(id)arg1;
- (void)search:(id)arg1;
- (void)refresh:(id)arg1;
- (void)viewDidBecomeActive;
- (void)awakeFromNib;
- (id)initWithAccount:(id)arg1;
- (void)dealloc;

@end

@interface FlintDownloadCellView : NSTableCellView
{
    NSProgressIndicator *_progress;
    NSImageView *_iconView;
    NSButton *_openButton;
}

@property(nonatomic) __weak NSButton *openButton; // @synthesize openButton=_openButton;
@property(nonatomic) __weak NSImageView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak NSProgressIndicator *progress; // @synthesize progress=_progress;
- (void).cxx_destruct;

@end

@interface FlintNotificationManager : NSObject <NSUserNotificationCenterDelegate>
{
    unsigned long long _mostRecentRoomId;
    unsigned long long _dockBadgeCount;
    unsigned long long _menuBarCount;
    NSDate *_lastActive;
}

+ (void)playAlert;
+ (id)sharedManager;
@property(retain) NSDate *lastActive; // @synthesize lastActive=_lastActive;
@property(nonatomic) unsigned long long menuBarCount; // @synthesize menuBarCount=_menuBarCount;
@property(nonatomic) unsigned long long dockBadgeCount; // @synthesize dockBadgeCount=_dockBadgeCount;
@property unsigned long long mostRecentRoomId; // @synthesize mostRecentRoomId=_mostRecentRoomId;
- (void).cxx_destruct;
- (void)decrementDockBadgeUnreadCountBy:(long long)arg1;
- (void)incrementDockBadgeUnreadCountBy:(long long)arg1;
- (void)clearDockBadgeCount;
- (id)statusItem;
- (void)decrementMenuBarUnreadCountBy:(long long)arg1;
- (void)incrementMenuBarUnreadCountBy:(long long)arg1;
- (void)refreshMenuBar;
- (void)clearMenuBarCount;
- (void)clearUserNotificationsForRoom:(unsigned long long)arg1;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)deliverUserNotificationsForNotification:(id)arg1;
- (void)growlForNotification:(id)arg1;
- (void)decrementUnreadCounts:(id)arg1;
- (void)clearUnreadCounts;
- (double)secondsSinceLastActivity;
- (void)clearMostRecentlyActiveRoom;
- (void)handleNotification:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface FlintNotificationCollection : NSObject
{
    unsigned long long _roomId;
    NSString *_roomName;
    NSArray *_statusNotifications;
    BOOL _initialLoad;
    unsigned long long _messagesCount;
    NSArray *_keywordNotifications;
    NSArray *_notifications;
}

+ (unsigned long long)allNotifications;
+ (id)stringForNotifications:(unsigned long long)arg1;
+ (id)collectionWithDictionary:(id)arg1;
+ (id)collectionWithRoom:(id)arg1 account:(id)arg2 messages:(id)arg3 streamed:(BOOL)arg4;
@property(readonly) NSArray *notifications; // @synthesize notifications=_notifications;
@property(retain, nonatomic) NSArray *keywordNotifications; // @synthesize keywordNotifications=_keywordNotifications;
@property(readonly) unsigned long long messagesCount; // @synthesize messagesCount=_messagesCount;
@property(readonly) BOOL initialLoad; // @synthesize initialLoad=_initialLoad;
@property(retain, nonatomic) NSArray *statusNotifications; // @synthesize statusNotifications=_statusNotifications;
@property(readonly) NSString *roomName; // @synthesize roomName=_roomName;
@property(readonly) unsigned long long roomId; // @synthesize roomId=_roomId;
- (void).cxx_destruct;
- (unsigned long long)tabCount;
- (BOOL)shouldPlayAlert;
- (unsigned long long)menuBarCount;
- (unsigned long long)dockCount;
- (id)userNotificationMessages;
- (unsigned long long)userNotificationCount;
- (id)growlMessages;
- (unsigned long long)growlCount;
- (unsigned long long)statusCount;
- (unsigned long long)keywordsCount;
- (unsigned long long)allMessagesCount;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintErrorViewController : NSViewController
{
    NSTextField *_errorField;
    NSString *_error;
}

@property(copy, nonatomic) NSString *error; // @synthesize error=_error;
@property __weak NSTextField *errorField; // @synthesize errorField=_errorField;
- (void).cxx_destruct;
- (void)updateErrorField;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintUnreadCounts : NSObject
{
    unsigned long long _tabCount;
    unsigned long long _menuBarCount;
    unsigned long long _dockBadgeCount;
}

@property(nonatomic) unsigned long long dockBadgeCount; // @synthesize dockBadgeCount=_dockBadgeCount;
@property(nonatomic) unsigned long long menuBarCount; // @synthesize menuBarCount=_menuBarCount;
@property(nonatomic) unsigned long long tabCount; // @synthesize tabCount=_tabCount;
- (void)reset;
- (id)init;

@end

@interface FlintDownloadsTableView : NSTableView
{
}

- (void)keyDown:(id)arg1;

@end

@interface FlintAboutController : NSWindowController
{
    NSTextField *_version;
}

@property __weak NSTextField *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)close:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface FlintStatusItemView : NSView
{
    NSStatusItem *_statusItem;
    NSString *_title;
    BOOL _highlighted;
    NSAttributedString *_attributedTitle;
    NSImage *_alternateImage;
    id _target;
    SEL _action;
    NSImage *_image;
}

+ (void)initialize;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property SEL action; // @synthesize action=_action;
@property id target; // @synthesize target=_target;
@property(retain, nonatomic) NSImage *alternateImage; // @synthesize alternateImage=_alternateImage;
@property(copy, nonatomic) NSAttributedString *attributedTitle; // @synthesize attributedTitle=_attributedTitle;
@property(nonatomic) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property __weak NSStatusItem *statusItem; // @synthesize statusItem=_statusItem;
- (void).cxx_destruct;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FlintLogController : NSWindowController <NSTableViewDelegate, NSTableViewDataSource>
{
    NSTableView *_tableView;
}

+ (void)initialize;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)refresh:(id)arg1;
- (void)copyLogs:(id)arg1;
- (void)close:(id)arg1;
- (void)windowDidLoad;
- (id)init;

@end

@interface FlintPasteboardHandler : NSObject
{
}

+ (BOOL)handlePasteboard:(id)arg1 drag:(id)arg2 withDelegate:(id)arg3;
+ (BOOL)handleDrag:(id)arg1 withDelegate:(id)arg2;
+ (BOOL)handlePasteboard:(id)arg1 withDelegate:(id)arg2;
+ (id)acceptableImageTypes;
+ (id)acceptablePasteboardTypes;

@end

@interface FlintAutocompleteController : NSViewController <NSTableViewDataSource, NSTableViewDelegate>
{
    NSTableView *_tableView;
    NSArray *_completions;
    id <FlintAutocompleteControllerDelegate> _delegate;
}

@property id <FlintAutocompleteControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *completions; // @synthesize completions=_completions;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)insertSelectedRow:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)filterListWithString:(id)arg1;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;

@end

@interface FlintAutocompleteItem : NSObject
{
    NSString *_completion;
    int _type;
    NSImage *_image;
    NSString *_emoji;
    NSString *_name;
}

+ (id)autocompleteItemWithName:(id)arg1 image:(id)arg2;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSString *emoji; // @synthesize emoji=_emoji;
@property(retain) NSImage *image; // @synthesize image=_image;
@property int type; // @synthesize type=_type;
@property(retain) NSString *completion; // @synthesize completion=_completion;
- (void).cxx_destruct;
- (id)description;
- (id)init;

@end

@interface FlintAutocompleteCellView : NSTableCellView
{
    NSTextField *_altImageField;
}

@property __weak NSTextField *altImageField; // @synthesize altImageField=_altImageField;
- (void).cxx_destruct;
- (void)setBackgroundStyle:(long long)arg1;

@end

@interface FlintAutocompleteTableView : NSTableView
{
}

- (void)keyDown:(id)arg1;

@end

@interface FlintMessageCellView : NSTableCellView
{
    FlintEmbedView *_embedView;
    BOOL _isSound;
    FlintMessageTextView *_textView;
    BOOL _isTweet;
    BOOL _star;
    struct CGPoint _defaultTextViewOrigin;
    long long _topMargin;
    NSTextField *_username;
    NSTextField *_date;
    BOOL _isEmbed;
    NSButton *_playSound;
    FlintAvatarView *_avatar;
    long long _bottomMargin;
}

+ (long long)tweetTextWidthDifference;
+ (long long)contentWidthForRect:(struct CGRect)arg1;
+ (long long)verticalPadding;
+ (long long)horizontalPadding;
+ (long long)usernameAndDatePadding;
@property long long bottomMargin; // @synthesize bottomMargin=_bottomMargin;
@property __weak FlintAvatarView *avatar; // @synthesize avatar=_avatar;
@property __weak NSButton *playSound; // @synthesize playSound=_playSound;
@property BOOL isEmbed; // @synthesize isEmbed=_isEmbed;
@property __weak NSTextField *date; // @synthesize date=_date;
@property __weak NSTextField *username; // @synthesize username=_username;
@property long long topMargin; // @synthesize topMargin=_topMargin;
@property struct CGPoint defaultTextViewOrigin; // @synthesize defaultTextViewOrigin=_defaultTextViewOrigin;
@property BOOL star; // @synthesize star=_star;
@property BOOL isTweet; // @synthesize isTweet=_isTweet;
@property FlintMessageTextView *textView; // @synthesize textView=_textView;
@property BOOL isSound; // @synthesize isSound=_isSound;
@property __weak FlintEmbedView *embedView; // @synthesize embedView=_embedView;
- (void).cxx_destruct;
- (struct CGRect)embedTextRect;
- (struct CGRect)tweetTextRect;
- (struct CGRect)tweetAvatarRect;
- (struct CGRect)playSoundRect;
- (struct CGRect)soundRect;
- (struct CGRect)dateRect;
- (struct CGRect)usernameRect;
- (struct CGRect)embedRect;
- (struct CGRect)avatarRect;
- (struct CGRect)innerRectForFollowUp;
- (struct CGRect)innerRectForDefault;
- (struct CGRect)innerRect;
- (void)layoutForSound;
- (void)layoutForTweet;
- (void)layoutForEmbed:(BOOL)arg1;
- (void)layoutForEmbed;
- (void)layoutForText;
- (void)layoutForFollowUp;
- (void)layoutForDefault;
- (void)prepareForReuse;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToSuperview;
- (void)layoutTextFields;
- (void)updateTextFields:(id)arg1;
- (void)layoutSubviews;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface FlintMessageTextView : NSTextView
{
}

- (BOOL)resignFirstResponder;
- (void)paste:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)textViewDidClick:(id)arg1;
- (void)setAttributedString:(id)arg1;
- (BOOL)shouldDrawInsertionPoint;
- (void)mouseDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface FlintStatusMessageCellView : NSTableCellView
{
    NSTextField *_date;
}

@property __weak NSTextField *date; // @synthesize date=_date;
- (void).cxx_destruct;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)updateTextFields:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)setBackgroundStyle:(long long)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface FlintEmojiAttachmentCell : NSTextAttachmentCell
{
}

- (struct CGPoint)cellBaselineOffset;

@end

@interface FlintMessageRowView : NSTableRowView
{
    long long _bottomMargin;
    long long _topMargin;
    int _position;
    int _style;
}

+ (void)initialize;
@property int style; // @synthesize style=_style;
@property int position; // @synthesize position=_position;
@property long long topMargin; // @synthesize topMargin=_topMargin;
@property long long bottomMargin; // @synthesize bottomMargin=_bottomMargin;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;

@end

@interface FlintEmbedView : NSImageView
{
    BOOL _animated;
    BOOL _receivedMouseDown;
    BOOL _video;
    NSTrackingArea *_trackingArea;
    FlintEmbed *_embed;
    BOOL _dragging;
    id <FlintEmbedViewDelegate> _delegate;
}

@property id <FlintEmbedViewDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL dragging; // @synthesize dragging=_dragging;
@property(retain) FlintEmbed *embed; // @synthesize embed=_embed;
@property(retain) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property BOOL video; // @synthesize video=_video;
@property BOOL receivedMouseDown; // @synthesize receivedMouseDown=_receivedMouseDown;
@property BOOL animated; // @synthesize animated=_animated;
- (void).cxx_destruct;
- (void)saveImage:(id)arg1;
- (void)toggleAnimation:(id)arg1;
- (void)openInBrowser:(id)arg1;
- (void)copyEmbedLink:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)updateTrackingAreas;
- (void)ensureTrackingArea;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface FlintTableView : NSTableView
{
    long long _flintClickedRow;
}

@property long long flintClickedRow; // @synthesize flintClickedRow=_flintClickedRow;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (long long)clickedRow;
- (id)menuForEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)validateProposedFirstResponder:(id)arg1 forEvent:(id)arg2;

@end

@interface FlintAccountHeaderCellView : NSTableCellView
{
    NSProgressIndicator *_loading;
}

@property __weak NSProgressIndicator *loading; // @synthesize loading=_loading;
- (void).cxx_destruct;

@end

@interface FlintTableCellView : NSTableCellView
{
}

@end

@interface FlintLobbyRoomCellView : NSTableCellView
{
}

- (void)setBackgroundStyle:(long long)arg1;

@end

@interface FlintLobbyRowView : NSTableRowView
{
    BOOL _lastRow;
}

@property BOOL lastRow; // @synthesize lastRow=_lastRow;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;

@end

@interface FlintUserCellView : NSTableCellView
{
    FlintAvatarView *_avatar;
    BOOL _smallSize;
}

@property BOOL smallSize; // @synthesize smallSize=_smallSize;
@property __weak FlintAvatarView *avatar; // @synthesize avatar=_avatar;
- (void).cxx_destruct;
- (void)layoutForSmallSize:(BOOL)arg1;
- (void)awakeFromNib;

@end

@interface FlintNotification : NSObject
{
    NSImage *_image;
    NSString *_title;
    BOOL _status;
    BOOL _user;
    BOOL _mention;
    NSString *_description;
}

@property(retain) NSString *description; // @synthesize description=_description;
@property BOOL mention; // @synthesize mention=_mention;
@property BOOL user; // @synthesize user=_user;
@property BOOL status; // @synthesize status=_status;
@property(retain) NSString *title; // @synthesize title=_title;
@property(retain) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1 description:(id)arg2 image:(id)arg3;

@end

@interface FlintAutocompleteRowView : NSTableRowView
{
}

+ (id)selectionGradient;
- (void)drawSelectionInRect:(struct CGRect)arg1;

@end

@interface FlintAvatarView : NSView
{
    NSImage *_image;
}

+ (void)initialize;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface PullToRefreshClipView : NSClipView
{
}

- (double)minimumScroll;
- (id)headerView;
- (BOOL)isRefreshing;
- (struct CGRect)documentRect;
- (BOOL)isFlipped;
- (struct CGPoint)constrainScrollPoint:(struct CGPoint)arg1;

@end

@interface PullToRefreshScrollView : NSScrollView
{
    BOOL isRefreshing;
    BOOL overHeaderView;
    NSView *refreshHeader;
    NSView *refreshArrow;
    NSView *releaseArrow;
    NSProgressIndicator *refreshSpinner;
    id <PullToRefreshDelegate> delegate;
    SEL selector;
    id _delegate;
    id target;
    BOOL _enabled;
}

@property BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly) NSView *releaseArrow; // @synthesize releaseArrow;
@property(readonly) NSView *refreshArrow; // @synthesize refreshArrow;
@property(readonly) NSProgressIndicator *refreshSpinner; // @synthesize refreshSpinner;
@property SEL selector; // @synthesize selector;
@property id target; // @synthesize target;
@property(readonly) NSView *refreshHeader; // @synthesize refreshHeader;
@property(readonly) BOOL isRefreshing; // @synthesize isRefreshing;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)refreshPTRScrollViewContents;
- (double)minimumScroll;
- (void)stopLoading;
- (void)startLoading;
- (BOOL)overRefreshView;
- (void)viewBoundsChanged:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)createHeaderView;
- (id)contentView;
- (void)viewDidMoveToWindow;
- (void)awakeFromNib;

@end

@interface FlintPostCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FlintLeaveRoomCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FlintJoinRoomCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FlintAccount : NSObject <NSCoding>
{
    NSString *_apiToken;
    FCFAccount *_account;
    NSString *_url;
    FlintCampfireClient *_client;
    NSString *_accessToken;
    unsigned long long _userId;
    NSString *_name;
    NSMutableArray *_rooms;
    NSMutableDictionary *_users;
    NSString *_userName;
    NSMutableDictionary *_fetching;
    NSString *_domain;
}

+ (void)fetchAuthorizationWithAccessToken:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)fetchAccountsUsingVerificationCode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)accountWithKey:(id)arg1;
+ (id)accountForRoomId:(unsigned long long)arg1;
+ (id)accountForRoom:(id)arg1;
+ (id)accountWithDomain:(id)arg1;
+ (void)moveAccountAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
+ (void)clearAccounts;
+ (void)setAccounts:(id)arg1;
+ (void)saveAccounts;
+ (void)removeAccount:(id)arg1;
+ (void)addAccount:(id)arg1;
+ (void)loadAccounts;
+ (id)accounts;
@property(copy) NSString *domain; // @synthesize domain=_domain;
@property(retain) NSMutableDictionary *fetching; // @synthesize fetching=_fetching;
@property(copy) NSString *userName; // @synthesize userName=_userName;
@property(retain, nonatomic) NSMutableDictionary *users; // @synthesize users=_users;
@property(retain) NSMutableArray *rooms; // @synthesize rooms=_rooms;
@property(copy) NSString *name; // @synthesize name=_name;
@property unsigned long long userId; // @synthesize userId=_userId;
@property(copy) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(retain, nonatomic) FlintCampfireClient *client; // @synthesize client=_client;
@property(copy) NSString *url; // @synthesize url=_url;
@property(retain) FCFAccount *account; // @synthesize account=_account;
@property(copy) NSString *apiToken; // @synthesize apiToken=_apiToken;
- (void).cxx_destruct;
- (id)URLForRoom:(id)arg1;
- (id)roomForRoomId:(unsigned long long)arg1;
- (void)fetchUser:(id)arg1;
- (id)nonfetchingUserforUserId:(unsigned long long)arg1;
- (id)userForUserId:(unsigned long long)arg1;
- (id)user;
- (void)updateFromAccount:(id)arg1;
- (id)retrieveTokenFromKeychain;
- (void)removeTokenFromKeychain;
- (void)saveTokenToKeychain;
- (id)accountKey;
- (void)fetchAccount:(CDUnknownBlockType)arg1;
- (void)fetchRoomsUsingBlock:(CDUnknownBlockType)arg1;
- (BOOL)isEqualToAccount:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface FlintCampfireClient : AFHTTPClient
{
    NSString *_token;
    NSTimeZone *_timezone;
    NSString *_domain;
}

@property(readonly) NSString *domain; // @synthesize domain=_domain;
@property(retain) NSTimeZone *timezone; // @synthesize timezone=_timezone;
@property(readonly) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (id)errorForOperation:(id)arg1 error:(id)arg2;
- (void)logErrorForOperation:(id)arg1 error:(id)arg2 message:(id)arg3;
- (void)cancelRequestForPaths:(id)arg1 method:(id)arg2 exact:(BOOL)arg3;
- (void)cancelRequestForPaths:(id)arg1 exact:(BOOL)arg2;
- (void)cancelRequestForPath:(id)arg1 exact:(BOOL)arg2;
- (void)cancelRequestForPath:(id)arg1;
- (void)transcriptforRoom:(id)arg1 date:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)transcriptURLForRoom:(id)arg1 date:(id)arg2;
- (id)transcriptPathForRoom:(id)arg1 date:(id)arg2;
- (void)searchForTerm:(id)arg1 fromIndex:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unstarMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)starMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)postMessage:(id)arg1 room:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateTopic:(id)arg1 room:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)uploadFile:(id)arg1 room:(id)arg2 progress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)uploadForMessage:(id)arg1 room:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)uploadsForRoom:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancelRequestsForRoom:(id)arg1;
- (void)pingRoom:(id)arg1;
- (void)leaveRoom:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)leaveRoom:(id)arg1;
- (void)infoForRoom:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)recentMessagesForRoom:(id)arg1 sinceMessage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unlockRoom:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)lockRoom:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)joinRoom:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)userWithUserID:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)roomsForAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)accountWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithDomain:(id)arg1 token:(id)arg2;

@end

@interface FlintCampfireClientError : NSObject
{
    long long _status;
    NSError *_error;
    NSString *_message;
}

+ (id)errorWithError:(id)arg1 status:(long long)arg2;
@property(copy) NSString *message; // @synthesize message=_message;
@property(retain) NSError *error; // @synthesize error=_error;
@property long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)initWithError:(id)arg1 status:(long long)arg2;

@end

@interface FlintCampfireMessage : NSObject
{
    NSMutableArray *_emojiRanges;
    NSString *_originalBody;
    unsigned long long _uid;
    FlintEmbed *_embed;
    NSString *_body;
    NSString *_type;
    unsigned long long _roomId;
    NSDate *_createdAt;
    BOOL _emojiReplaced;
    unsigned long long _userId;
    BOOL _starred;
    NSMutableArray *_urlRanges;
    BOOL _mention;
    BOOL _pending;
    FlintTweet *_tweet;
    FlintCampfireUpload *_upload;
}

+ (id)messageWithBody:(id)arg1 type:(id)arg2 forUser:(id)arg3;
+ (id)messageWithBody:(id)arg1 forUser:(id)arg2;
+ (id)messageWithDictionary:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) FlintCampfireUpload *upload; // @synthesize upload=_upload;
@property(retain) FlintTweet *tweet; // @synthesize tweet=_tweet;
@property BOOL pending; // @synthesize pending=_pending;
@property BOOL mention; // @synthesize mention=_mention;
@property(retain) NSMutableArray *urlRanges; // @synthesize urlRanges=_urlRanges;
@property BOOL starred; // @synthesize starred=_starred;
@property(readonly) unsigned long long userId; // @synthesize userId=_userId;
@property BOOL emojiReplaced; // @synthesize emojiReplaced=_emojiReplaced;
@property(readonly) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(readonly) unsigned long long roomId; // @synthesize roomId=_roomId;
@property(readonly) NSString *type; // @synthesize type=_type;
@property(retain) NSString *body; // @synthesize body=_body;
@property(retain, nonatomic) FlintEmbed *embed; // @synthesize embed=_embed;
@property(readonly) unsigned long long uid; // @synthesize uid=_uid;
@property(readonly) NSString *originalBody; // @synthesize originalBody=_originalBody;
@property(retain) NSMutableArray *emojiRanges; // @synthesize emojiRanges=_emojiRanges;
- (void).cxx_destruct;
- (void)notifyMessageWasUpdated:(BOOL)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)checkForEmbed;
- (BOOL)hasVisibleEmbed;
- (id)dictionaryRepresentation;
- (id)JSONData;
- (BOOL)containsMentionForKeywords:(id)arg1;
- (void)checkForMentions;
- (void)checkForLinks;
- (void)replaceEmoji;
- (void)processBody;
- (id)transcriptBody;
- (id)notificationText;
- (BOOL)isFollowUpOfMessage:(id)arg1;
- (void)playSound;
- (BOOL)shouldRenderEmoji;
- (BOOL)isConferenceFinished;
- (BOOL)isTweet;
- (BOOL)isSound;
- (BOOL)isPaste;
- (BOOL)isUnlock;
- (BOOL)isLock;
- (BOOL)disallowGuests;
- (BOOL)allowGuests;
- (BOOL)isUpload;
- (BOOL)isTopicChange;
- (BOOL)isExit;
- (BOOL)isEntrance;
- (BOOL)isSystemUpdate;
- (BOOL)isStatusUpdate;
- (BOOL)isRemark;
- (BOOL)isUserUpdate;
- (id)description;
- (BOOL)isEqualToMessage:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface FlintCampfireTextMessage : FlintCampfireMessage
{
}

- (void)keywordsUpdated:(id)arg1;
- (BOOL)shouldRenderEmoji;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireUploadMessage : FlintCampfireMessage
{
}

- (void)setUpload:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfirePasteMessage : FlintCampfireMessage
{
}

- (id)transcriptBody;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireSoundMessage : FlintCampfireMessage
{
    FlintCampfireSound *_sound;
}

@property(retain) FlintCampfireSound *sound; // @synthesize sound=_sound;
- (void).cxx_destruct;
- (id)transcriptBody;
- (id)notificationText;
- (BOOL)shouldRenderEmoji;
- (void)playSound;
- (BOOL)isSound;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireTweetMessage : FlintCampfireMessage
{
}

- (BOOL)isTweet;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireEnterMessage : FlintCampfireMessage
{
}

- (BOOL)isStatusUpdate;
- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireLeaveMessage : FlintCampfireMessage
{
}

- (BOOL)isStatusUpdate;
- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireKickMessage : FlintCampfireMessage
{
}

- (BOOL)isStatusUpdate;
- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireIdleMessage : FlintCampfireMessage
{
}

@end

@interface FlintCampfireUnidleMessage : FlintCampfireMessage
{
}

@end

@interface FlintCampfireLockMessage : FlintCampfireMessage
{
}

- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireUnlockMessage : FlintCampfireMessage
{
}

- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireTopicChangeMessage : FlintCampfireMessage
{
}

- (BOOL)isRemark;
- (BOOL)shouldRenderEmoji;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireAllowGuestsMessage : FlintCampfireMessage
{
}

- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireDisallowGuestsMessage : FlintCampfireMessage
{
}

- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireConferenceCreatedMessage : FlintCampfireMessage
{
}

- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireConferenceFinishedMessage : FlintCampfireMessage
{
}

- (BOOL)isSystemUpdate;
- (BOOL)isRemark;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireSystemMessage : FlintCampfireMessage
{
}

@end

@interface FlintCampfireRoom : NSObject <NSCoding>
{
    BOOL _guests;
    FlintRoomSettings *_settings;
    NSMutableSet *_users;
    NSString *_name;
    NSMutableArray *_uploads;
    unsigned long long _uid;
    NSString *_topic;
    BOOL _locked;
}

@property BOOL locked; // @synthesize locked=_locked;
@property(copy, nonatomic) NSString *topic; // @synthesize topic=_topic;
@property unsigned long long uid; // @synthesize uid=_uid;
@property(retain) NSMutableArray *uploads; // @synthesize uploads=_uploads;
@property(copy) NSString *name; // @synthesize name=_name;
@property(retain) NSMutableSet *users; // @synthesize users=_users;
@property(retain) FlintRoomSettings *settings; // @synthesize settings=_settings;
@property BOOL guests; // @synthesize guests=_guests;
- (void).cxx_destruct;
- (void)removeUserFromRoom:(id)arg1;
- (void)addUserToRoom:(id)arg1;
- (void)reset;
- (id)title;
- (void)updateWithRoom:(id)arg1;
- (BOOL)isEqualToRoom:(id)arg1;
- (id)description;
- (void)updateWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface FlintCampfireRoomConnection : NSObject <NSURLConnectionDelegate>
{
    BOOL _streaming;
    NSDate *_lastJoin;
    NSTimer *_pingTimer;
    NSTimer *_timeout;
    NSTimer *_pollTimer;
    BOOL _initialFetch;
    id <FlintCampfireRoomConnectionDelegate> _delegate;
    FlintAccount *_account;
    NSURLConnection *_streamingConnection;
    BOOL _fetching;
    FlintCampfireRoom *_room;
    int _state;
    FlintCampfireMessage *_lastMessage;
    NSMutableString *_buffer;
    NSDate *_lastUpdate;
}

+ (id)streamingURL;
@property(retain) NSDate *lastUpdate; // @synthesize lastUpdate=_lastUpdate;
@property(retain) NSMutableString *buffer; // @synthesize buffer=_buffer;
@property(retain) FlintCampfireMessage *lastMessage; // @synthesize lastMessage=_lastMessage;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly) FlintCampfireRoom *room; // @synthesize room=_room;
@property BOOL fetching; // @synthesize fetching=_fetching;
@property(retain) NSURLConnection *streamingConnection; // @synthesize streamingConnection=_streamingConnection;
@property(readonly) FlintAccount *account; // @synthesize account=_account;
@property id <FlintCampfireRoomConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL initialFetch; // @synthesize initialFetch=_initialFetch;
@property(retain) NSTimer *pollTimer; // @synthesize pollTimer=_pollTimer;
@property(retain) NSTimer *timeout; // @synthesize timeout=_timeout;
@property(retain) NSTimer *pingTimer; // @synthesize pingTimer=_pingTimer;
@property(retain) NSDate *lastJoin; // @synthesize lastJoin=_lastJoin;
@property BOOL streaming; // @synthesize streaming=_streaming;
- (void).cxx_destruct;
- (void)networkUnavailable:(id)arg1;
- (void)networkAvailable:(id)arg1;
- (void)ping;
- (void)sendPing:(id)arg1;
- (void)clearPing;
- (void)startPing;
- (void)fetchRecentMessages;
- (void)fetchInitialMessages;
- (void)stopPolling;
- (void)pollTimerDidFire:(id)arg1;
- (void)startPolling;
- (void)resetTimeout;
- (void)clearTimeout;
- (void)addTimeout;
- (void)streamDidTimeout:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)processStreamData:(id)arg1;
- (void)clearStreamingConnection;
- (void)stopStreaming;
- (void)startStreaming;
- (void)processMessages:(id)arg1 streamed:(BOOL)arg2;
- (double)minutesSinceLastJoin;
- (double)secondsSinceLastUpdate;
- (void)disconnect;
- (void)reconnect;
- (void)connect;
- (BOOL)isDisconnected;
- (BOOL)isConnected;
- (id)description;
- (id)initWithRoom:(id)arg1 account:(id)arg2;
- (void)dealloc;

@end

@interface FlintCampfireSound : NSObject
{
    NSString *_body;
    NSString *_name;
    AFHTTPRequestOperation *_downloadOperation;
    NSURL *_url;
}

+ (BOOL)isSoundMessage:(id)arg1;
+ (void)updateSounds:(id)arg1;
+ (id)soundWithName:(id)arg1;
+ (BOOL)isSound:(id)arg1;
+ (id)sounds;
+ (id)soundWithDictionary:(id)arg1;
+ (void)initialize;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(retain) AFHTTPRequestOperation *downloadOperation; // @synthesize downloadOperation=_downloadOperation;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSString *body; // @synthesize body=_body;
- (void).cxx_destruct;
- (void)downloadAndPlay:(BOOL)arg1;
- (void)play;
- (id)initWithDictionary:(id)arg1;
- (id)soundPath;
- (id)description;

@end

@interface FlintCampfireUpload : NSObject
{
    NSString *_contentType;
    FlintCampfireClient *_client;
    BOOL _downloaded;
    NSString *_name;
    unsigned long long _messageId;
    unsigned long long _uploadId;
    NSURL *_url;
    unsigned long long _roomId;
    unsigned long long _userId;
    float _downloadPercentage;
    NSString *_downloadPath;
}

@property(copy) NSString *downloadPath; // @synthesize downloadPath=_downloadPath;
@property(nonatomic) float downloadPercentage; // @synthesize downloadPercentage=_downloadPercentage;
@property unsigned long long userId; // @synthesize userId=_userId;
@property unsigned long long roomId; // @synthesize roomId=_roomId;
@property(retain) NSURL *url; // @synthesize url=_url;
@property unsigned long long uploadId; // @synthesize uploadId=_uploadId;
@property unsigned long long messageId; // @synthesize messageId=_messageId;
@property(retain) NSString *name; // @synthesize name=_name;
@property BOOL downloaded; // @synthesize downloaded=_downloaded;
@property __weak FlintCampfireClient *client; // @synthesize client=_client;
@property(copy) NSString *contentType; // @synthesize contentType=_contentType;
- (void).cxx_destruct;
- (id)previewItemTitle;
- (id)previewItemURL;
- (BOOL)fileExists;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintCampfireUser : NSObject <NSCoding>
{
    NSURL *_avatarURL;
    NSString *_email;
    NSString *_name;
    BOOL _admin;
    int _type;
    unsigned long long _uid;
    NSDate *_updated;
    NSImage *_avatar;
}

+ (id)userWithDict:(id)arg1;
@property(retain) NSImage *avatar; // @synthesize avatar=_avatar;
@property(retain) NSDate *updated; // @synthesize updated=_updated;
@property unsigned long long uid; // @synthesize uid=_uid;
@property int type; // @synthesize type=_type;
@property BOOL admin; // @synthesize admin=_admin;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *email; // @synthesize email=_email;
@property(retain) NSURL *avatarURL; // @synthesize avatarURL=_avatarURL;
- (void).cxx_destruct;
- (void)updateWithUser:(id)arg1;
- (BOOL)hasExpired;
- (void)refresh;
- (id)nicknameForType:(int)arg1;
- (id)nickname;
- (id)firstName;
- (id)initials;
- (BOOL)matchesCompletion:(id)arg1;
- (void)fetchAvatar;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface FlintError : NSObject
{
}

+ (id)messageForError:(id)arg1;
+ (id)messageForStatus:(long long)arg1;

@end

@interface FlintMessagesCollection : NSObject
{
    NSArray *_orderedMessages;
    NSArray *_sortDescriptors;
    NSPredicate *_filterPredicate;
    NSMutableSet *_messages;
}

@property(retain) NSMutableSet *messages; // @synthesize messages=_messages;
@property(retain) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property(retain) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(retain) NSArray *orderedMessages; // @synthesize orderedMessages=_orderedMessages;
- (void).cxx_destruct;
- (void)clearFilterPredicate;
- (void)updateFilterPredicate:(id)arg1;
- (id)messagesMatchingText:(id)arg1;
- (id)newestMessage;
- (void)removeAllMessages;
- (void)removeMessage:(id)arg1;
- (void)addMessages:(id)arg1;
- (void)addMessage:(id)arg1 notify:(BOOL)arg2;
- (void)addMessage:(id)arg1;
- (id)oldestMessage;
- (unsigned long long)indexOfMessage:(id)arg1;
- (id)messageAtIndex:(long long)arg1;
- (long long)count;
- (void)orderedMessagesNeedsUpdate;
- (id)description;
- (id)init;

@end

@interface FlintPreferences : NSObject
{
}

+ (BOOL)pushNotificationsEnabled;
+ (void)setPushNotificationsEnabled:(BOOL)arg1;
+ (BOOL)activateMostRecentlyActiveRoom;
+ (void)setSidebarWidth:(long long)arg1;
+ (long long)sidebarWidth;
+ (BOOL)hideInsteadOfClose;
+ (BOOL)showAllOpenGraphLinks;
+ (BOOL)showEmbedSource;
+ (void)setTabPosition:(long long)arg1;
+ (long long)tabPosition;
+ (void)setDownloadsURL:(id)arg1;
+ (id)downloadsURL;
+ (void)setInputFontSize:(long long)arg1;
+ (long long)inputFontSize;
+ (void)setWindows:(id)arg1;
+ (id)windows;
+ (void)setShowUnreadCountForMenuBar:(BOOL)arg1;
+ (BOOL)showUnreadCountForMenuBar;
+ (void)setShowMenuBarIcon:(BOOL)arg1;
+ (BOOL)showMenuBarIcon;
+ (void)setAutoPlayAnimatedGifs:(BOOL)arg1;
+ (BOOL)autoPlayAnimatedGifs;
+ (void)setShowInlineImages:(BOOL)arg1;
+ (BOOL)showInlineImages;
+ (void)setFontSize:(long long)arg1;
+ (long long)fontSize;
+ (BOOL)isCampfireSoundsEnabled;
+ (BOOL)showStatusMessages;
+ (void)setShowStatusMessages:(BOOL)arg1;
+ (BOOL)openLinksInBackground;
+ (BOOL)ignoreStatusMessageNotifications;
+ (int)completeType;
+ (BOOL)isDockBadgesEnabled;
+ (long long)growlNotifications;
+ (long long)soundNotifications;
+ (void)setKeywordNotifications:(unsigned long long)arg1;
+ (unsigned long long)keywordNotifications;
+ (void)setAllMessagesNotifications:(unsigned long long)arg1;
+ (unsigned long long)allMessagesNotifications;
+ (id)soundName;
+ (void)updateKeywordsWithNameIfNeeded:(id)arg1;
+ (void)setHighlightKeywords:(id)arg1;
+ (id)highlightKeywords;
+ (id)lastVersion;
+ (void)save;
+ (void)registerDefaults;

@end

@interface FlintRoomSettings : NSObject <NSCoding>
{
    NSMutableDictionary *_preferences;
}

@property(retain) NSMutableDictionary *preferences; // @synthesize preferences=_preferences;
- (void).cxx_destruct;
- (BOOL)isMuted;
- (void)setMuted:(BOOL)arg1;
- (void)setSidebarWidth:(long long)arg1;
- (long long)sidebarWidth;
- (void)setShowInlineImages:(BOOL)arg1;
- (BOOL)showInlineImages;
- (void)setShowStatusMessages:(BOOL)arg1;
- (BOOL)showStatusMessages;
- (unsigned long long)lastMessageId;
- (void)setLastMessageId:(unsigned long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface FlintTweet : NSObject
{
    NSString *_link;
    NSURL *_avatarURL;
    NSImage *_avatar;
    NSString *_username;
    NSString *_message;
}

@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *username; // @synthesize username=_username;
@property(retain) NSImage *avatar; // @synthesize avatar=_avatar;
@property(copy) NSURL *avatarURL; // @synthesize avatarURL=_avatarURL;
@property(copy) NSString *link; // @synthesize link=_link;
- (void).cxx_destruct;
- (void)fetchAvatar;
- (id)initWithDict:(id)arg1;
- (id)init;

@end

@interface FlintMessageViewModel : NSObject
{
    NSImage *_image;
    NSImage *_avatar;
    NSMutableDictionary *_heightCache;
    NSAttributedString *_body;
    NSString *_statusBody;
    FlintCampfireMessage *_message;
    NSString *_name;
    FlintRoomSettings *_roomSettings;
    NSString *_highlight;
}

+ (void)initialize;
@property(retain, nonatomic) NSString *highlight; // @synthesize highlight=_highlight;
@property(readonly) FlintRoomSettings *roomSettings; // @synthesize roomSettings=_roomSettings;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) FlintCampfireMessage *message; // @synthesize message=_message;
@property(readonly) NSString *statusBody; // @synthesize statusBody=_statusBody;
@property(readonly) NSAttributedString *body; // @synthesize body=_body;
@property(retain) NSMutableDictionary *heightCache; // @synthesize heightCache=_heightCache;
@property(readonly) NSImage *avatar; // @synthesize avatar=_avatar;
@property(readonly) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (double)heightForWidth:(double)arg1 followUp:(BOOL)arg2 bottomMargin:(double)arg3 topMargin:(double)arg4;
- (id)colorForMessageBody:(id)arg1;
- (id)fontForMessageBody:(id)arg1;
- (id)attributedStringForMessageBody:(id)arg1;
- (id)date;
- (id)initWithMessage:(id)arg1 user:(id)arg2 roomSettings:(id)arg3 highlight:(id)arg4;

@end

@interface FlintConfiguration : NSObject
{
    NSDictionary *_data;
}

+ (id)sharedConfiguration;
@property(retain) NSDictionary *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (long long)minutesSinceLastUpdateCheck;
- (void)refresh;
- (void)loadConfiguration;
- (id)sounds;
- (id)init;

@end

@interface FlintEmbed : NSObject
{
    FlintCampfireClient *_client;
    NSString *_source;
    BOOL _animate;
    NSURL *_url;
    NSString *_type;
    PLKItem *_item;
    AFImageRequestOperation *_imageRequestOperation;
    BOOL _animated;
    BOOL _error;
    NSImage *_image;
    BOOL _hidden;
    NSImage *_scaledImage;
    BOOL _direct;
}

+ (void)checkForEmbedWithSource:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)embedForLink:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (BOOL)isEmbeddableLink:(id)arg1;
@property(nonatomic) BOOL direct; // @synthesize direct=_direct;
@property(retain) NSImage *scaledImage; // @synthesize scaledImage=_scaledImage;
@property(nonatomic) BOOL hidden; // @synthesize hidden=_hidden;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property BOOL error; // @synthesize error=_error;
@property(getter=isAnimated) BOOL animated; // @synthesize animated=_animated;
@property(retain) AFImageRequestOperation *imageRequestOperation; // @synthesize imageRequestOperation=_imageRequestOperation;
@property(retain) PLKItem *item; // @synthesize item=_item;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain) NSURL *url; // @synthesize url=_url;
@property(nonatomic) BOOL animate; // @synthesize animate=_animate;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
@property(retain, nonatomic) FlintCampfireClient *client; // @synthesize client=_client;
- (void).cxx_destruct;
- (void)writeToFile:(id)arg1;
- (id)fileType;
- (id)fileName;
- (double)heightForWidth:(double)arg1;
- (void)checkForAnimatedGif;
- (id)request;
- (void)download;
- (BOOL)loaded;
- (BOOL)hasPlayableVideo;
- (BOOL)isImage;
- (BOOL)isVideo;
- (id)description;
- (id)initWithURL:(id)arg1 client:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)init;

@end

@interface FlintLog : NSObject
{
    NSString *_message;
    NSDate *_date;
    int _level;
}

+ (id)logWithMessage:(id)arg1;
+ (id)logWithMessage:(id)arg1 level:(int)arg2;
+ (id)logWithMessage:(id)arg1 date:(id)arg2 level:(int)arg3;
@property int level; // @synthesize level=_level;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(retain) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (id)description;
- (id)initWithMessage:(id)arg1 date:(id)arg2 level:(int)arg3;

@end

@interface FlintLogger : NSObject
{
    NSMutableArray *_entries;
}

+ (id)sharedLogger;
@property(retain) NSMutableArray *entries; // @synthesize entries=_entries;
- (void).cxx_destruct;
- (id)stringWithContentsOfLog;
- (void)appendMessage:(id)arg1 level:(int)arg2;
- (void)appendMessage:(id)arg1;
- (void)appendLog:(id)arg1;
- (id)init;

@end

@interface FlintPath : NSObject
{
}

+ (void)clearCacheDirectory:(id)arg1;
+ (void)clearCaches;
+ (void)clearDownloadsCache;
+ (void)clearUploadCache;
+ (id)applicationSupportDirectory;
+ (id)cacheDirectory;
+ (id)pathForCacheDirectory:(id)arg1;
+ (id)pathForDownloadWithFilename:(id)arg1;
+ (id)pathForDownloads;
+ (id)defaultPathForDownloads;
+ (id)pathForConfiguration;
+ (id)pathForAccounts;
+ (id)pathForDownloadsCache;
+ (id)pathForUploadsCache;
+ (id)pathForCachedSound:(id)arg1;
+ (id)pathForSoundsCache;
+ (id)temporaryDirectory;

@end

@interface FlintURLRange : NSObject
{
    struct _NSRange _range;
    NSURL *_url;
}

+ (id)urlRangeWithRange:(struct _NSRange)arg1 url:(id)arg2;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (void).cxx_destruct;
- (struct _NSRange)rangeValue;
- (id)displayString;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface FlintMessagesViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate, FlintTableViewDelegate, FlintEmbedViewDelegate, FlintFindControllerDelegate>
{
    FlintMessagesCollection *_messagesCollection;
    NSMapTable *_viewModels;
    struct CGRect _lastViewFrame;
    NSArray *_findMatches;
    NSTableView *_messagesView;
    NSString *_highlight;
    FlintFindController *_findController;
    BOOL _awake;
    BOOL _startAtBottom;
    BOOL _loadingEarlierMessages;
    unsigned long long _findIndex;
    BOOL _pullToRefresh;
    FlintCampfireRoom *_room;
    FlintAccount *_account;
    BOOL _wasAtBottom;
    FlintCampfireMessage *_loadEarlierMessage;
    BOOL _hasRefreshed;
    FlintRoomController *_roomController;
}

@property(nonatomic) FlintRoomController *roomController; // @synthesize roomController=_roomController;
@property BOOL hasRefreshed; // @synthesize hasRefreshed=_hasRefreshed;
@property(retain) FlintCampfireMessage *loadEarlierMessage; // @synthesize loadEarlierMessage=_loadEarlierMessage;
@property BOOL wasAtBottom; // @synthesize wasAtBottom=_wasAtBottom;
@property(retain) FlintAccount *account; // @synthesize account=_account;
@property(retain) FlintCampfireRoom *room; // @synthesize room=_room;
@property BOOL pullToRefresh; // @synthesize pullToRefresh=_pullToRefresh;
@property unsigned long long findIndex; // @synthesize findIndex=_findIndex;
@property BOOL loadingEarlierMessages; // @synthesize loadingEarlierMessages=_loadingEarlierMessages;
@property BOOL startAtBottom; // @synthesize startAtBottom=_startAtBottom;
@property BOOL awake; // @synthesize awake=_awake;
@property(retain) FlintFindController *findController; // @synthesize findController=_findController;
@property(retain, nonatomic) NSString *highlight; // @synthesize highlight=_highlight;
@property __weak NSTableView *messagesView; // @synthesize messagesView=_messagesView;
@property(retain) NSArray *findMatches; // @synthesize findMatches=_findMatches;
@property struct CGRect lastViewFrame; // @synthesize lastViewFrame=_lastViewFrame;
@property(retain) NSMapTable *viewModels; // @synthesize viewModels=_viewModels;
@property(retain, nonatomic) FlintMessagesCollection *messagesCollection; // @synthesize messagesCollection=_messagesCollection;
- (void).cxx_destruct;
- (id)menuForMessage:(id)arg1 link:(id)arg2 selection:(id)arg3;
- (void)updateFindHighlightingForMessages:(id)arg1 text:(id)arg2;
- (void)nextFindMatch;
- (void)previousFindMatch;
- (void)findDidComplete;
- (void)cancel:(id)arg1;
- (void)findText:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)find:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollRowToVisible:(long long)arg1 animate:(BOOL)arg2;
- (void)scrollToBottomAnimated:(BOOL)arg1;
- (void)scrollToTopAnimated:(BOOL)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)jumpToMessage:(id)arg1 animated:(BOOL)arg2;
- (void)jumpToMessage:(id)arg1;
- (void)jumpToBottom:(id)arg1;
- (void)jumpToTop:(id)arg1;
- (BOOL)isMessagesAtBottom;
- (void)didLoadEarlierMessages;
- (void)ptrScrollViewDidTriggerRefresh:(id)arg1;
- (void)openUpload:(id)arg1;
- (void)openPaste:(id)arg1;
- (void)openEmbed:(id)arg1;
- (void)openLinkInBrowser:(id)arg1 background:(BOOL)arg2;
- (void)openLinkInBrowser:(id)arg1;
- (void)openLink:(id)arg1 forMessage:(id)arg2;
- (void)viewInBrowser:(id)arg1;
- (void)copyLink:(id)arg1;
- (void)copyText:(id)arg1;
- (void)playSound:(id)arg1;
- (void)toggleImageAnimation:(id)arg1;
- (void)toggleInlineImageForMessage:(id)arg1;
- (void)toggleInlineImage:(id)arg1;
- (void)toggleStar:(id)arg1;
- (void)copy:(id)arg1;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (double)topOffsetOfTableView;
- (double)bottomOffsetOfTableView;
- (long long)bottomMarginForRow:(long long)arg1;
- (long long)topMarginForRow:(long long)arg1;
- (id)messagesForIndexes:(id)arg1;
- (id)activeMessages;
- (id)activeIndexes;
- (id)activeMessage;
- (id)messageForRow:(unsigned long long)arg1;
- (void)invalidateAllViewModels;
- (void)invalidateViewModelForMessage:(id)arg1;
- (id)viewModelForMessage:(id)arg1;
- (id)viewModelForRow:(long long)arg1;
- (void)refreshRows:(id)arg1 heightChange:(BOOL)arg2 reloadData:(BOOL)arg3;
- (void)refresh;
- (void)scheduleRefresh;
- (void)refreshMessages:(id)arg1;
- (void)refreshRowForMessage:(id)arg1;
- (void)userUpdated:(id)arg1;
- (void)messageUpdated:(id)arg1;
- (void)updateFontSize:(id)arg1;
- (void)didClickEmbedView:(id)arg1;
- (id)messageForEmbedView:(id)arg1;
- (id)tableView:(id)arg1 menuForRow:(long long)arg2;
- (void)tableView:(id)arg1 didClickRow:(long long)arg2 inView:(id)arg3 event:(id)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)updateFindIndicatorWithMessage:(id)arg1;
- (void)viewDidChangeFrame:(id)arg1;
- (id)userForMessage:(id)arg1;
- (BOOL)isUserAccount:(id)arg1;
- (void)unstarMessage:(id)arg1;
- (void)starMessage:(id)arg1;
- (void)toggleInlineImages:(id)arg1;
- (void)toggleEnterLeaveMessages:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)messages;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewWillClose;
- (void)awakeFromNib;
- (id)initWithRoom:(id)arg1 account:(id)arg2;
- (void)dealloc;

@end

@interface IGIsolatedCookieWebView : WebView
{
}

- (void)injectCookie:(id)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IGIsolatedCookieWebViewResourceLoadDelegate : NSObject
{
    NSMutableArray *cookieStore;
}

- (id)getCookieArrayForRequest:(id)arg1;
- (void)setCookie:(id)arg1;
- (void)removeExpiredCookies;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveResponse:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)pullCookiesFromResponse:(id)arg1;
- (id)init;

@end

@interface ZWPieProgressView : NSView
{
    NSColor *_backgroundColor;
    double _progress;
    NSColor *_foregroundColor;
}

@property(retain, nonatomic) NSColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FlintBaseView : NSView
{
    NSViewController *_viewController;
}

@property(nonatomic) NSViewController *viewController; // @synthesize viewController=_viewController;
- (void)setNextResponder:(id)arg1;

@end

@interface FCFAccount : NSObject <NSCoding>
{
    NSString *_subdomain;
    NSString *_plan;
    NSTimeZone *_timezone;
    long long _storage;
    NSString *_name;
    unsigned long long _uid;
}

@property(readonly) unsigned long long uid; // @synthesize uid=_uid;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) long long storage; // @synthesize storage=_storage;
@property(readonly) NSTimeZone *timezone; // @synthesize timezone=_timezone;
@property(readonly) NSString *plan; // @synthesize plan=_plan;
@property(readonly) NSString *subdomain; // @synthesize subdomain=_subdomain;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface FlintFindController : NSViewController <NSTextFieldDelegate>
{
    NSSearchField *_searchField;
    NSTextField *_searchResults;
    NSView *_partnerView;
    id <FlintFindControllerDelegate> _delegate;
}

@property id <FlintFindControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSView *partnerView; // @synthesize partnerView=_partnerView;
@property __weak NSTextField *searchResults; // @synthesize searchResults=_searchResults;
@property __weak NSSearchField *searchField; // @synthesize searchField=_searchField;
- (void).cxx_destruct;
- (void)controlTextDidChange:(id)arg1;
- (void)findComplete:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findCycle:(id)arg1;
- (void)changeFindPosition:(id)arg1;
- (void)updateMatches:(long long)arg1;
- (void)hide;
- (void)showInView:(id)arg1;
- (void)focusSearchField;
- (id)init;

@end

@interface FlintBottomViewController : NSViewController <NSTextViewDelegate, FlintTextViewDelegate, FlintPasteboardHandlerDelegate>
{
    NSImageView *_guests;
    NSArray *_users;
    NSView *_connectedView;
    FlintTextView *_input;
    NSImageView *_locked;
    id <FlintInputDelegate><FlintPasteboardHandlerDelegate> _delegate;
    ZWPieProgressView *_uploadProgress;
}

@property __weak ZWPieProgressView *uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property id <FlintInputDelegate><FlintPasteboardHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSImageView *locked; // @synthesize locked=_locked;
@property(retain) FlintTextView *input; // @synthesize input=_input;
@property(retain) NSView *connectedView; // @synthesize connectedView=_connectedView;
@property(retain) NSArray *users; // @synthesize users=_users;
@property(retain) NSImageView *guests; // @synthesize guests=_guests;
- (void).cxx_destruct;
- (void)uploadFiles:(id)arg1;
- (id)autocompleteItemsForString:(id)arg1;
- (void)postMessage;
- (void)fitBottomViewToInput;
- (void)focusInputWithString:(id)arg1;
- (void)focusInput;
- (void)insertUsername:(id)arg1;
- (void)inputDidChangeFrame:(id)arg1;
- (void)removeInputFieldAccessoryView:(id)arg1;
- (void)insertInputFieldAccessoryViewAtRight:(id)arg1;
- (void)insertInputFieldAccessoryViewAtLeft:(id)arg1;
- (void)hideGuestAccessIndicator;
- (void)showGuestAccessIndicator;
- (void)hideLockedRoomIndicator;
- (void)showLockedRoomIndicator;
- (void)updateUploadProgress:(double)arg1;
- (void)hideUploadProgress;
- (void)showUploadProgress;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;

@end

@interface FlintSplitView : NSSplitView
{
    BOOL _dragged;
}

@property BOOL dragged; // @synthesize dragged=_dragged;
- (void)mouseDown:(id)arg1;

@end

@interface FlintJSONRequestOperation : AFJSONRequestOperation
{
    BOOL _flintDecodedJSON;
    NSError *_flintError;
}

@property(retain) NSError *flintError; // @synthesize flintError=_flintError;
@property BOOL flintDecodedJSON; // @synthesize flintDecodedJSON=_flintDecodedJSON;
- (void).cxx_destruct;
- (id)error;
- (id)responseJSON;

@end

@interface PodsDummy_Pods : NSObject
{
}

@end

@interface AFQueryStringPair : NSObject
{
    id _field;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) id field; // @synthesize field=_field;
- (void).cxx_destruct;
- (id)URLEncodedStringValueWithEncoding:(unsigned long long)arg1;
- (id)initWithField:(id)arg1 value:(id)arg2;

@end

@interface AFHTTPClient : NSObject <NSCoding, NSCopying>
{
    NSURL *_baseURL;
    unsigned long long _stringEncoding;
    int _parameterEncoding;
    NSMutableArray *_registeredHTTPOperationClassNames;
    NSMutableDictionary *_defaultHeaders;
    NSURLCredential *_defaultCredential;
    NSOperationQueue *_operationQueue;
    struct __SCNetworkReachability *_networkReachability;
    int _networkReachabilityStatus;
    CDUnknownBlockType _networkReachabilityStatusBlock;
    int _defaultSSLPinningMode;
    BOOL _allowsInvalidSSLCertificate;
}

+ (id)clientWithBaseURL:(id)arg1;
@property(nonatomic) BOOL allowsInvalidSSLCertificate; // @synthesize allowsInvalidSSLCertificate=_allowsInvalidSSLCertificate;
@property(nonatomic) int defaultSSLPinningMode; // @synthesize defaultSSLPinningMode=_defaultSSLPinningMode;
@property(copy, nonatomic) CDUnknownBlockType networkReachabilityStatusBlock; // @synthesize networkReachabilityStatusBlock=_networkReachabilityStatusBlock;
@property(nonatomic) int networkReachabilityStatus; // @synthesize networkReachabilityStatus=_networkReachabilityStatus;
@property(nonatomic) struct __SCNetworkReachability *networkReachability; // @synthesize networkReachability=_networkReachability;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLCredential *defaultCredential; // @synthesize defaultCredential=_defaultCredential;
@property(retain, nonatomic) NSMutableDictionary *defaultHeaders; // @synthesize defaultHeaders=_defaultHeaders;
@property(retain, nonatomic) NSMutableArray *registeredHTTPOperationClassNames; // @synthesize registeredHTTPOperationClassNames=_registeredHTTPOperationClassNames;
@property(nonatomic) int parameterEncoding; // @synthesize parameterEncoding=_parameterEncoding;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)patchPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)deletePath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)putPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)postPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)getPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)enqueueBatchOfHTTPRequestOperations:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)enqueueBatchOfHTTPRequestOperationsWithRequests:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)cancelAllHTTPOperationsWithMethod:(id)arg1 path:(id)arg2;
- (void)enqueueHTTPRequestOperation:(id)arg1;
- (id)HTTPRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)multipartFormRequestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4;
- (id)requestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3;
- (void)clearAuthorizationHeader;
- (void)setAuthorizationHeaderWithToken:(id)arg1;
- (void)setAuthorizationHeaderWithUsername:(id)arg1 password:(id)arg2;
- (void)setDefaultHeader:(id)arg1 value:(id)arg2;
- (id)defaultValueForHeader:(id)arg1;
- (void)unregisterHTTPOperationClass:(Class)arg1;
- (BOOL)registerHTTPOperationClass:(Class)arg1;
- (void)setReachabilityStatusChangeBlock:(CDUnknownBlockType)arg1;
- (void)stopMonitoringNetworkReachability;
- (void)startMonitoringNetworkReachability;
- (id)description;
- (void)dealloc;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface AFStreamingMultipartFormData : NSObject <AFMultipartFormData>
{
    NSMutableURLRequest *_request;
    AFMultipartBodyStream *_bodyStream;
    unsigned long long _stringEncoding;
}

@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) AFMultipartBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(copy, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartFormData;
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (void)appendPartWithFormData:(id)arg1 name:(id)arg2;
- (void)appendPartWithFileData:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4;
- (void)appendPartWithInputStream:(id)arg1 name:(id)arg2 fileName:(id)arg3 length:(unsigned long long)arg4 mimeType:(id)arg5;
- (BOOL)appendPartWithFileURL:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4 error:(id *)arg5;
- (BOOL)appendPartWithFileURL:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (id)initWithURLRequest:(id)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate>
{
    unsigned long long _streamStatus;
    NSError *_streamError;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    AFHTTPBodyPart *_currentHTTPBodyPart;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
}

@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) unsigned long long numberOfBytesInPacket; // @synthesize numberOfBytesInPacket=_numberOfBytesInPacket;
@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(retain, nonatomic) AFHTTPBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSError *streamError; // @synthesize streamError=_streamError;
@property(nonatomic) unsigned long long streamStatus; // @synthesize streamStatus=_streamStatus;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) BOOL empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)initWithStringEncoding:(unsigned long long)arg1;

@end

@interface AFHTTPBodyPart : NSObject <NSCopying>
{
    int _phase;
    NSInputStream *_inputStream;
    unsigned long long _phaseReadOffset;
    unsigned long long _stringEncoding;
    NSDictionary *_headers;
    id _body;
    unsigned long long _bodyContentLength;
    BOOL _hasInitialBoundary;
    BOOL _hasFinalBoundary;
}

@property(nonatomic) BOOL hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) BOOL hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) BOOL bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (id)stringForHeaders;
- (void)dealloc;
- (id)init;

@end

@interface AFHTTPRequestOperation : AFURLConnectionOperation
{
    NSError *_HTTPError;
    struct dispatch_queue_s *_successCallbackQueue;
    struct dispatch_queue_s *_failureCallbackQueue;
}

+ (BOOL)canProcessRequest:(id)arg1;
+ (void)addAcceptableContentTypes:(id)arg1;
+ (id)acceptableContentTypes;
+ (void)addAcceptableStatusCodes:(id)arg1;
+ (id)acceptableStatusCodes;
@property(nonatomic) struct dispatch_queue_s *failureCallbackQueue; // @synthesize failureCallbackQueue=_failureCallbackQueue;
@property(nonatomic) struct dispatch_queue_s *successCallbackQueue; // @synthesize successCallbackQueue=_successCallbackQueue;
@property(retain, nonatomic) NSError *HTTPError; // @synthesize HTTPError=_HTTPError;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) BOOL hasAcceptableContentType;
@property(readonly, nonatomic) BOOL hasAcceptableStatusCode;
- (void)pause;
- (unsigned long long)responseStringEncoding;
- (id)error;
- (void)dealloc;

// Remaining properties
@property(retain, nonatomic) NSURLRequest *request; // @dynamic request;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @dynamic response;

@end

@interface AFImageRequestOperation : AFHTTPRequestOperation
{
    NSImage *_responseImage;
}

+ (BOOL)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)imageRequestOperationWithRequest:(id)arg1 imageProcessingBlock:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (id)imageRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSImage *responseImage; // @synthesize responseImage=_responseImage;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)initWithRequest:(id)arg1;

@end

@interface AFJSONRequestOperation : AFHTTPRequestOperation
{
    id _responseJSON;
    unsigned long long _JSONReadingOptions;
    NSError *_JSONError;
}

+ (BOOL)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)JSONRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSError *JSONError; // @synthesize JSONError=_JSONError;
@property(nonatomic) unsigned long long JSONReadingOptions; // @synthesize JSONReadingOptions=_JSONReadingOptions;
@property(retain, nonatomic) id responseJSON; // @synthesize responseJSON=_responseJSON;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)error;

// Remaining properties
@property(retain, nonatomic) NSRecursiveLock *lock; // @dynamic lock;

@end

@interface AFPropertyListRequestOperation : AFHTTPRequestOperation
{
    id _responsePropertyList;
    unsigned long long _propertyListReadOptions;
    unsigned long long _propertyListFormat;
    NSError *_propertyListError;
}

+ (BOOL)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)propertyListRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSError *propertyListError; // @synthesize propertyListError=_propertyListError;
@property(nonatomic) unsigned long long propertyListFormat; // @synthesize propertyListFormat=_propertyListFormat;
@property(nonatomic) unsigned long long propertyListReadOptions; // @synthesize propertyListReadOptions=_propertyListReadOptions;
@property(retain, nonatomic) id responsePropertyList; // @synthesize responsePropertyList=_responsePropertyList;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)error;
- (id)initWithRequest:(id)arg1;

@end

@interface AFURLConnectionOperation : NSOperation <NSURLConnectionDelegate, NSCoding, NSCopying>
{
    short _state;
    BOOL _cancelled;
    NSURLConnection *_connection;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    BOOL _allowsInvalidSSLCertificate;
    NSData *_responseData;
    NSString *_responseString;
    unsigned long long _responseStringEncoding;
    long long _totalBytesRead;
    NSOutputStream *_outputStream;
    NSURLCredential *_credential;
    int _SSLPinningMode;
    BOOL _shouldUseCredentialStorage;
    NSDictionary *_userInfo;
    id _backgroundTaskIdentifier;
    CDUnknownBlockType _uploadProgress;
    CDUnknownBlockType _downloadProgress;
    CDUnknownBlockType _authenticationChallenge;
    CDUnknownBlockType _cacheResponse;
    CDUnknownBlockType _redirectResponse;
    NSRecursiveLock *_lock;
}

+ (id)pinnedPublicKeys;
+ (id)pinnedCertificates;
+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)arg1;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(copy, nonatomic) CDUnknownBlockType redirectResponse; // @synthesize redirectResponse=_redirectResponse;
@property(copy, nonatomic) CDUnknownBlockType cacheResponse; // @synthesize cacheResponse=_cacheResponse;
@property(copy, nonatomic) CDUnknownBlockType authenticationChallenge; // @synthesize authenticationChallenge=_authenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(copy, nonatomic) CDUnknownBlockType uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(nonatomic) id backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) BOOL shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(nonatomic) int SSLPinningMode; // @synthesize SSLPinningMode=_SSLPinningMode;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
@property(nonatomic) long long totalBytesRead; // @synthesize totalBytesRead=_totalBytesRead;
@property(nonatomic) unsigned long long responseStringEncoding; // @synthesize responseStringEncoding=_responseStringEncoding;
@property(copy, nonatomic) NSString *responseString; // @synthesize responseString=_responseString;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(nonatomic) BOOL allowsInvalidSSLCertificate; // @synthesize allowsInvalidSSLCertificate=_allowsInvalidSSLCertificate;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSSet *runLoopModes; // @synthesize runLoopModes=_runLoopModes;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic, getter=isCancelled) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) short state; // @synthesize state=_state;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)cancelConnection;
- (void)cancel;
- (void)finish;
- (void)operationDidStart;
- (void)start;
- (BOOL)isConcurrent;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isReady;
- (void)resume;
- (BOOL)isPaused;
- (void)pause;
- (void)setRedirectResponseBlock:(CDUnknownBlockType)arg1;
- (void)setCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setWillSendRequestForAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadProgressBlock:(CDUnknownBlockType)arg1;
- (void)setUploadProgressBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream; // @dynamic inputStream;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;

@end

@interface AFXMLRequestOperation : AFHTTPRequestOperation
{
    NSXMLParser *_responseXMLParser;
    NSXMLDocument *_responseXMLDocument;
    NSError *_XMLError;
}

+ (BOOL)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)XMLDocumentRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)XMLParserRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSError *XMLError; // @synthesize XMLError=_XMLError;
@property(retain, nonatomic) NSXMLDocument *responseXMLDocument; // @synthesize responseXMLDocument=_responseXMLDocument;
@property(retain, nonatomic) NSXMLParser *responseXMLParser; // @synthesize responseXMLParser=_responseXMLParser;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)cancel;
- (id)error;

@end

@interface PodsDummy_Pods_AFNetworking : NSObject
{
}

@end

@interface JKArray : NSMutableArray <NSCopying, NSMutableCopying, NSFastEnumeration>
{
    id *objects;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long mutations;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)dealloc;

@end

@interface JKDictionaryEnumerator : NSEnumerator
{
    id collection;
    unsigned long long nextObject;
}

- (id)nextObject;
- (id)allObjects;
- (void)dealloc;
- (id)initWithJKDictionary:(id)arg1;

@end

@interface JKDictionary : NSMutableDictionary <NSCopying, NSMutableCopying, NSFastEnumeration>
{
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long mutations;
    struct JKHashTableEntry *entry;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;

@end

@interface JSONDecoder : NSObject
{
    struct JKParseState *parseState;
}

+ (id)decoderWithParseOptions:(unsigned long long)arg1;
+ (id)decoder;
- (id)mutableObjectWithData:(id)arg1 error:(id *)arg2;
- (id)mutableObjectWithData:(id)arg1;
- (id)mutableObjectWithUTF8String:(const char *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
- (id)mutableObjectWithUTF8String:(const char *)arg1 length:(unsigned long long)arg2;
- (id)objectWithData:(id)arg1 error:(id *)arg2;
- (id)objectWithData:(id)arg1;
- (id)objectWithUTF8String:(const char *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
- (id)objectWithUTF8String:(const char *)arg1 length:(unsigned long long)arg2;
- (id)parseJSONData:(id)arg1 error:(id *)arg2;
- (id)parseJSONData:(id)arg1;
- (id)parseUTF8String:(const char *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
- (id)parseUTF8String:(const char *)arg1 length:(unsigned long long)arg2;
- (void)clearCache;
- (void)dealloc;
- (id)initWithParseOptions:(unsigned long long)arg1;
- (id)init;

@end

@interface JKSerializer : NSObject
{
    struct JKEncodeState *encodeState;
}

+ (id)serializeObject:(id)arg1 options:(unsigned long long)arg2 encodeOption:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4 delegate:(id)arg5 selector:(SEL)arg6 error:(id *)arg7;
- (void)dealloc;
- (void)releaseState;
- (id)serializeObject:(id)arg1 options:(unsigned long long)arg2 encodeOption:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4 delegate:(id)arg5 selector:(SEL)arg6 error:(id *)arg7;

@end

@interface PodsDummy_Pods_JSONKit : NSObject
{
}

@end

@interface NPReachability : NSObject
{
    NSMutableDictionary *_handlerByOpaqueObject;
    struct __SCNetworkReachability *_reachabilityRef;
    unsigned int _currentReachabilityFlags;
}

+ (BOOL)isReachableWithFlags:(unsigned int)arg1;
+ (id)keyPathsForValuesAffectingCurrentNetworkStatus;
+ (id)keyPathsForValuesAffectingCurrentlyReachable;
+ (id)sharedInstance;
+ (void)load;
@property(nonatomic) unsigned int currentReachabilityFlags; // @synthesize currentReachabilityFlags=_currentReachabilityFlags;
- (void).cxx_destruct;
- (void)startNotifier;
- (id)_handlers;
- (void)removeHandler:(id)arg1;
- (id)addHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) int currentNetworkStatus;
@property(readonly, nonatomic, getter=isCurrentlyReachable) BOOL currentlyReachable;
- (void)dealloc;
- (id)init;

@end

@interface PodsDummy_Pods_NPReachability : NSObject
{
}

@end

@interface PLKCloudAppService : PLKService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (void)itemForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKDribbbleService : PLKOEmbedService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)oEmbedBaseURL;
+ (id)oEmbedParamsForURL:(id)arg1;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKDroplrService : PLKOpenGraphService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKFlickrService : PLKOEmbedService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)oEmbedParamsForURL:(id)arg1;
+ (id)oEmbedBaseURL;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKInstagramService : PLKOEmbedService
{
}

+ (id)oEmbedBaseURL;
+ (id)oEmbedParamsForURL:(id)arg1;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKItem : NSObject
{
    NSString *_title;
    NSURL *_thumbnailURL;
    NSURL *_url;
    NSString *_html;
    NSString *_service;
    NSString *_type;
}

+ (id)itemWithDictionary:(id)arg1;
@property(readonly) NSString *type; // @synthesize type=_type;
@property(readonly) NSString *service; // @synthesize service=_service;
@property(readonly) NSString *html; // @synthesize html=_html;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(readonly) NSURL *thumbnailURL; // @synthesize thumbnailURL=_thumbnailURL;
@property(readonly) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

@interface PLKOEmbedService : PLKService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (void)itemForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)oEmbedBaseURL;
+ (id)oEmbedParamsForURL:(id)arg1;

@end

@interface PLKOpenGraphService : PLKService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)openGraphAttributesFromHTMLData:(id)arg1;
+ (void)itemForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface PLKRdioService : PLKOEmbedService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)oEmbedBaseURL;
+ (id)oEmbedParamsForURL:(id)arg1;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKService : NSObject
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)itemFromDictionary:(id)arg1;
+ (void)itemForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (BOOL)isSupportedURL:(id)arg1 services:(id)arg2;
+ (BOOL)isSupportedURL:(id)arg1;
+ (id)services;

@end

@interface PLKTwitterCardsService : PLKService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)twitterCardsAttributesFromHTMLData:(id)arg1;
+ (void)itemForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface PLKVimeoService : PLKOEmbedService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)oEmbedParamsForURL:(id)arg1;
+ (id)oEmbedBaseURL;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface PLKYoutubeService : PLKOEmbedService
{
}

+ (id)requiredKeys;
+ (id)parseItemFromDictionary:(id)arg1;
+ (id)oEmbedParamsForURL:(id)arg1;
+ (id)oEmbedBaseURL;
+ (BOOL)isSupportedURL:(id)arg1;

@end

@interface TFHpple : NSObject
{
    NSData *data;
    BOOL isXML;
}

+ (id)hppleWithXMLData:(id)arg1;
+ (id)hppleWithHTMLData:(id)arg1;
+ (id)hppleWithData:(id)arg1 isXML:(BOOL)arg2;
@property(readonly, nonatomic) NSData *data; // @synthesize data;
- (void).cxx_destruct;
- (id)peekAtSearchWithXPathQuery:(id)arg1;
- (id)searchWithXPathQuery:(id)arg1;
- (id)initWithHTMLData:(id)arg1;
- (id)initWithXMLData:(id)arg1;
- (id)initWithData:(id)arg1 isXML:(BOOL)arg2;

@end

@interface TFHppleElement : NSObject
{
    NSDictionary *node;
    TFHppleElement *parent;
}

+ (id)hppleElementWithNode:(id)arg1;
@property(nonatomic) TFHppleElement *parent; // @synthesize parent;
- (void).cxx_destruct;
- (id)text;
- (id)firstTextChild;
- (id)firstChildWithClassName:(id)arg1;
- (id)childrenWithClassName:(id)arg1;
- (id)firstChildWithTagName:(id)arg1;
- (id)childrenWithTagName:(id)arg1;
- (BOOL)isTextNode;
- (BOOL)hasChildren;
- (id)description;
- (id)objectForKey:(id)arg1;
@property(readonly, nonatomic) NSDictionary *attributes;
@property(readonly, nonatomic) TFHppleElement *firstChild;
@property(readonly, nonatomic) NSArray *children;
@property(readonly, nonatomic) NSString *tagName;
@property(readonly, nonatomic) NSString *content;
- (id)initWithNode:(id)arg1;

@end

@interface PodsDummy_Pods_Pluck : NSObject
{
}

@end

@interface SSKeychain : NSObject
{
}

+ (id)accountsForService:(id)arg1;
+ (id)allAccounts;
+ (BOOL)setPassword:(id)arg1 forService:(id)arg2 account:(id)arg3 error:(id *)arg4;
+ (BOOL)setPassword:(id)arg1 forService:(id)arg2 account:(id)arg3;
+ (BOOL)deletePasswordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (BOOL)deletePasswordForService:(id)arg1 account:(id)arg2;
+ (id)passwordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (id)passwordForService:(id)arg1 account:(id)arg2;

@end

@interface SSKeychainQuery : NSObject
{
    NSString *_account;
    NSString *_service;
    NSString *_label;
    NSData *_passwordData;
}

+ (id)errorWithCode:(int)arg1;
@property(copy, nonatomic) NSData *passwordData; // @synthesize passwordData=_passwordData;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) NSString *service; // @synthesize service=_service;
@property(copy, nonatomic) NSString *account; // @synthesize account=_account;
- (void).cxx_destruct;
- (id)query;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) id <NSCoding> passwordObject;
- (BOOL)fetch:(id *)arg1;
- (id)fetchAll:(id *)arg1;
- (BOOL)delete:(id *)arg1;
- (BOOL)save:(id *)arg1;

@end

@interface PodsDummy_Pods_SSKeychain : NSObject
{
}

@end

@interface ZWEmoji : NSObject
{
}

+ (void)initialize;
+ (id)replaceCodesInString:(id)arg1;
+ (id)stringByReplacingCodesInString:(id)arg1;
+ (id)stringByReplacingEmojiInString:(id)arg1 ignore:(id)arg2;
+ (id)stringByReplacingEmojiInString:(id)arg1;
+ (id)emojiForCode:(id)arg1;
+ (id)codeForEmoji:(id)arg1;
+ (id)codes;
+ (id)emojis;

@end

@interface PodsDummy_Pods_ZWEmoji : NSObject
{
}

@end

@interface PodsDummy_Pods_ZWKit : NSObject
{
}

@end

@interface NSWindow (Center)
- (void)trueCenter;
@end

@interface NSBezierPath (AMShading)
- (void)customVerticalFillWithCallbacks:(struct CGFunctionCallbacks)arg1 firstColor:(id)arg2 secondColor:(id)arg3;
- (void)customHorizontalFillWithCallbacks:(struct CGFunctionCallbacks)arg1 firstColor:(id)arg2 secondColor:(id)arg3;
- (void)customFillWithCallbacks:(struct CGFunctionCallbacks)arg1 firstColor:(id)arg2 secondColor:(id)arg3 startPoint:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;
- (void)bilinearGradientFillWithOuterColor:(id)arg1 innerColor:(id)arg2;
- (void)linearVerticalGradientFillWithStartColor:(id)arg1 endColor:(id)arg2;
- (void)linearGradientFillWithStartColor:(id)arg1 endColor:(id)arg2;
@end

@interface NSString (AITruncation)
+ (id)ellipsis;
- (id)stringWithEllipsisByTruncatingToLength:(unsigned long long)arg1;
@end

@interface NSImage (File)
- (unsigned long long)fileTypeForFile:(id)arg1;
- (void)writeToFile:(id)arg1 properties:(id)arg2;
- (void)writeToFile:(id)arg1;
@end

@interface NSDictionary (QueryString)
+ (id)dictionaryWithFormEncodedString:(id)arg1;
- (id)stringWithFormEncodedComponents;
@end

@interface NSURL (QueryInspector)
- (id)queryDictionary;
@end

@interface NSString (QueryString)
- (id)stringByUnescapingFromURLQuery;
- (id)stringByEscapingForURLQuery;
@end

@interface NSAttributedString (Size)
- (double)heightForWidth:(double)arg1;
@end

@interface NSView (Size)
- (void)centerInView:(id)arg1;
@end

@interface NSString (GTMNSStringHTMLAdditions)
- (id)gtm_stringByUnescapingFromHTML;
- (id)gtm_stringByEscapingForAsciiHTML;
- (id)gtm_stringByEscapingForHTML;
- (id)gtm_stringByEscapingHTMLUsingTable:(CDStruct_6a59ab51 *)arg1 ofSize:(unsigned long long)arg2 escapingUnicode:(BOOL)arg3;
@end

@interface NSEvent (Flint)
- (BOOL)containsInputCharacter;
- (BOOL)isSelection;
@end

@interface NSShadow (Text)
+ (id)shadowWithColor:(id)arg1 offset:(struct CGSize)arg2;
+ (id)lightTextShadowWithOpacity:(float)arg1;
+ (id)lightTextShadow;
+ (id)darkTextShadowWithOpacity:(float)arg1;
+ (id)darkTextShadow;
@end

@interface NSDate (Extras)
+ (id)displayTimeForDate:(id)arg1;
+ (id)previousDayFormatter;
+ (id)todayFormatter;
- (id)yearMonthDayWithTimezone:(id)arg1;
- (id)yearMonthDay;
- (id)nextDay;
- (id)previousDay;
- (BOOL)isToday;
@end

@interface NSDictionary (Flint)
- (id)flintStringForKey:(id)arg1;
- (id)nonNullObjectForKey:(id)arg1;
@end

@interface NSString (Flint)
+ (BOOL)hasImageExtension:(id)arg1;
- (float)heightForFont:(id)arg1 withWidth:(float)arg2;
- (id)stringWithHighlightedString:(id)arg1 length:(long long)arg2;
- (BOOL)isOlderThanVersion:(id)arg1;
- (id)rangesOfString:(id)arg1 options:(unsigned long long)arg2;
- (id)rangesOfString:(id)arg1;
- (BOOL)isDropboxShareLink;
- (BOOL)isImageLink;
- (BOOL)isFileLink;
- (BOOL)isTwitterLink;
- (id)urlRangesOfLinks;
- (void)openInBrowserBackground:(BOOL)arg1;
- (void)openInBrowser;
- (id)pathByInsertingString:(id)arg1;
- (id)keywordsFromName;
- (id)keywordsFromString;
- (BOOL)containsString:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)containsString:(id)arg1;
- (BOOL)isEmpty;
- (id)MD5;
- (id)SHA1;
- (id)stringByTruncatingToLength:(unsigned long long)arg1;
@end

@interface NSString (Regex)
- (id)matchesForRegex:(id)arg1;
- (BOOL)hasMatchForRegex:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)hasMatchForRegex:(id)arg1;
- (BOOL)isMatchedByRegex:(id)arg1;
@end

@interface NSString (URLs)
- (BOOL)isLink;
- (id)linkMatchesUsingDataDetector;
- (id)linkMatchesUsingRegex;
- (id)linkMatches;
- (id)links;
- (id)urls;
- (id)url;
@end

@interface NSImage (Gif)
- (void)resetAnimation;
- (BOOL)isAnimatedGif;
- (id)bitmapRep;
@end

@interface NSHTTPCookie (IGPropertyTesting)
- (BOOL)isEqual:(id)arg1;
- (BOOL)isForRequest:(id)arg1;
- (BOOL)isForPath:(id)arg1;
- (BOOL)isForHost:(id)arg1;
- (BOOL)isExpired;
@end

@interface NSObject (ZWKVO)
- (void)removeObserver:(id)arg1 forKeyPaths:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPaths:(id)arg2;
@end

@interface NSString (JSONKitDeserializing)
- (id)mutableObjectFromJSONStringWithParseOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)mutableObjectFromJSONStringWithParseOptions:(unsigned long long)arg1;
- (id)mutableObjectFromJSONString;
- (id)objectFromJSONStringWithParseOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)objectFromJSONStringWithParseOptions:(unsigned long long)arg1;
- (id)objectFromJSONString;
@end

@interface NSData (JSONKitDeserializing)
- (id)mutableObjectFromJSONDataWithParseOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)mutableObjectFromJSONDataWithParseOptions:(unsigned long long)arg1;
- (id)mutableObjectFromJSONData;
- (id)objectFromJSONDataWithParseOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)objectFromJSONDataWithParseOptions:(unsigned long long)arg1;
- (id)objectFromJSONData;
@end

@interface NSString (JSONKitSerializing)
- (id)JSONStringWithOptions:(unsigned long long)arg1 includeQuotes:(BOOL)arg2 error:(id *)arg3;
- (id)JSONString;
- (id)JSONDataWithOptions:(unsigned long long)arg1 includeQuotes:(BOOL)arg2 error:(id *)arg3;
- (id)JSONData;
@end

@interface NSArray (JSONKitSerializing)
- (id)JSONStringWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingDelegate:(id)arg2 selector:(SEL)arg3 error:(id *)arg4;
- (id)JSONStringWithOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)JSONString;
- (id)JSONDataWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingDelegate:(id)arg2 selector:(SEL)arg3 error:(id *)arg4;
- (id)JSONDataWithOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)JSONData;
@end

@interface NSDictionary (JSONKitSerializing)
- (id)JSONStringWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingDelegate:(id)arg2 selector:(SEL)arg3 error:(id *)arg4;
- (id)JSONStringWithOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)JSONString;
- (id)JSONDataWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingDelegate:(id)arg2 selector:(SEL)arg3 error:(id *)arg4;
- (id)JSONDataWithOptions:(unsigned long long)arg1 error:(id *)arg2;
- (id)JSONData;
@end

@interface NSArray (JSONKitSerializingBlockAdditions)
- (id)JSONStringWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)JSONDataWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;
@end

@interface NSDictionary (JSONKitSerializingBlockAdditions)
- (id)JSONStringWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)JSONDataWithOptions:(unsigned long long)arg1 serializeUnsupportedClassesUsingBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;
@end

@interface NSDictionary (Pluck)
- (BOOL)plk_hasValuesForKeys:(id)arg1;
- (id)plk_stringForKey:(id)arg1;
@end

@interface NSURL (Pluck)
- (BOOL)plk_isMatchedByRegex:(id)arg1;
@end

@interface NSArray (ZWKit)
- (id)zw_reduce:(CDUnknownBlockType)arg1;
- (id)zw_filter:(CDUnknownBlockType)arg1;
- (id)zw_map:(CDUnknownBlockType)arg1;
@end

@interface NSImage (ZW)
- (id)imageConstrainedToSize:(struct CGSize)arg1;
- (id)imageConstrainedToHeight:(long long)arg1;
- (id)imageConstrainedToWidth:(long long)arg1;
@end

